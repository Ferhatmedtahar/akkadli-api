var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Address.html",[0,1.436,1,1.436]],["body/entities/Address.html",[0,1.804,1,1.804,2,1.806,3,0.172,4,0.152,5,0.152,6,2.802,7,0.565,8,1.626,9,1.888,10,4.107,11,4.107,12,2.532,13,4.107,14,1.363,15,0.019,16,1.626,17,2.061,18,3.433,19,1.316,20,3.265,21,2.497,22,3.433,23,4.093,24,4.093,25,5.494,26,4.449,27,3.796,28,3.265,29,3.265,30,2.802,31,4.625,32,3.537,33,3.265,34,3.265,35,3.265,36,0.272,37,2.802,38,3.734,39,3.969,40,3.969,41,1.273,42,0.172,43,0.039,44,3.265,45,3.265,46,3.265,47,2.497,48,0.012,49,0.012]],["title/controllers/AddressController.html",[50,1.009,51,2.558]],["body/controllers/AddressController.html",[1,1.441,3,0.194,4,0.172,5,0.172,7,0.639,14,0.749,15,0.019,17,1.684,19,1.075,36,0.337,42,0.194,43,0.044,48,0.013,49,0.013,50,1.012,51,3.502,52,1.063,53,3.17,54,1.915,55,3.694,56,1.965,57,2.959,58,3.767,59,4.711,60,3.854,61,3.694,62,1.965,63,2.787,64,2.825,65,3.945,66,3.666,67,3.694,68,1.605,69,1.299,70,1.174,71,1.605,72,0.605,73,2.825,74,3.4,75,3.17,76,3.694,77,1.605,78,1.605,79,1.698,80,1.605,81,1.52,82,2.123,83,3.694,84,2.825,85,3.694,86,3.17,87,3.221,88,3.694]],["title/modules/AddressModule.html",[89,1.06,90,2.353]],["body/modules/AddressModule.html",[1,1.376,3,0.186,4,0.164,5,0.164,15,0.019,36,0.409,42,0.186,43,0.042,48,0.012,49,0.012,51,3.891,52,1.405,72,0.577,74,3.89,75,3.028,89,1.612,90,4.652,91,1.451,92,1.451,93,1.622,94,1.622,95,1.451,96,2.574,97,1.622,98,3.028,99,3.028,100,3.028,101,3.199,102,3.89,103,3.89,104,3.89,105,2.245,106,1.622,107,1.533,108,3.528,109,2.531,110,2.092,111,1.376,112,2.452,113,3.528,114,2.255,115,3.528,116,4.805,117,3.528,118,3.528,119,3.528]],["title/injectables/AddressService.html",[74,2.183,120,0.869]],["body/injectables/AddressService.html",[1,2.57,3,0.122,4,0.108,5,0.108,7,0.399,9,1.983,12,1.974,14,0.999,15,0.019,19,1.138,36,0.382,41,0.901,42,0.122,43,0.027,48,0.009,49,0.009,50,1.199,56,1.395,57,2.863,58,3.645,59,3.769,60,2.736,62,2.079,63,2.727,64,1.766,65,3.344,66,2.287,68,2.142,69,1.733,70,1.567,71,1.004,72,0.378,73,1.766,74,2.121,77,1.554,78,2.317,79,1.062,80,2.317,81,2.193,82,1.824,84,1.766,86,1.982,87,3.76,102,3.487,103,3.487,104,3.487,111,0.901,114,1.477,116,3.757,120,0.844,121,0.95,122,1.982,123,3.07,124,3.577,125,1.982,126,2.95,127,2.556,128,2.31,129,2.486,130,1.982,131,3.12,132,2.31,133,2.31,134,2.31,135,3.348,136,4.377,137,2.31,138,2.31,139,2.287,140,1.369,141,1.477,142,1.982,143,2.31,144,2.287,145,1.605,146,4.377,147,1.369,148,2.31,149,2.31,150,1.982,151,2.31,152,2.31]],["title/controllers/AppController.html",[50,1.009,153,2.558]],["body/controllers/AppController.html",[3,0.249,4,0.22,5,0.22,7,0.818,15,0.019,17,1.581,19,1.009,21,2.31,36,0.348,42,0.249,43,0.056,48,0.015,49,0.015,50,1.623,52,1.361,56,2.31,62,1.844,72,0.774,81,1.945,82,1.75,153,4.117,154,4.058,155,5.818,156,4.729,157,3.835,158,4.058,159,4.729,160,4.729]],["title/modules/AppModule.html",[89,1.06,161,2.558]],["body/modules/AppModule.html",[3,0.157,4,0.139,5,0.139,14,0.603,15,0.019,36,0.405,42,0.157,43,0.035,48,0.011,49,0.011,52,1.245,72,0.487,82,1.101,89,1.467,90,3.965,91,1.223,92,1.223,93,1.367,94,1.367,95,1.223,96,2.343,97,1.367,101,3.024,105,1.988,106,1.367,107,1.292,109,2.242,110,1.763,111,1.16,153,3.542,157,3.678,158,2.552,161,5.084,162,2.552,163,2.552,164,2.552,165,3.678,166,3.965,167,3.965,168,3.965,169,3.965,170,2.973,171,2.973,172,2.973,173,2.973,174,2.973,175,2.973,176,2.973,177,2.973,178,2.973,179,2.973,180,2.973,181,4.324,182,2.973,183,2.108,184,2.973,185,2.973,186,2.973,187,2.973,188,2.973,189,2.973,190,2.973,191,2.973,192,2.552,193,2.973]],["title/injectables/AppService.html",[120,0.869,157,2.183]],["body/injectables/AppService.html",[3,0.261,4,0.231,5,0.231,7,0.859,15,0.019,19,1.059,21,2.381,36,0.292,42,0.261,43,0.059,48,0.015,49,0.015,56,2.381,62,1.936,72,0.813,82,1.838,120,1.441,121,2.042,155,5.918,157,3.619,194,4.261,195,4.965,196,4.965,197,4.965]],["title/controllers/AuthController.html",[50,1.009,198,2.558]],["body/controllers/AuthController.html",[3,0.283,4,0.251,5,0.251,15,0.018,36,0.316,42,0.283,43,0.064,48,0.016,49,0.016,50,1.474,52,1.548,54,2.788,72,0.88,198,4.453,199,4.616,200,3.738,201,5.378]],["title/modules/AuthModule.html",[89,1.06,165,2.183]],["body/modules/AuthModule.html",[3,0.22,4,0.194,5,0.194,15,0.019,36,0.38,42,0.22,43,0.049,48,0.014,49,0.014,52,1.574,72,0.683,89,1.755,91,1.716,92,1.716,93,1.918,94,1.918,95,1.716,96,2.803,97,2.803,101,2.665,105,2.513,106,1.918,107,1.813,109,2.163,112,2.899,165,4.163,198,4.237,202,3.58,203,3.58,204,3.58,205,4.371,206,4.172,207,4.18,208,4.172,209,4.172]],["title/injectables/AuthService.html",[120,0.869,205,2.183]],["body/injectables/AuthService.html",[3,0.286,4,0.253,5,0.253,15,0.018,36,0.319,42,0.286,43,0.064,48,0.016,49,0.016,72,0.889,120,1.522,121,2.234,205,3.821,210,4.661]],["title/classes/CreateAddressDto.html",[43,0.043,131,2.036]],["body/classes/CreateAddressDto.html",[3,0.232,4,0.205,5,0.205,7,0.762,8,1.991,10,4.786,11,4.786,13,4.786,14,1.269,15,0.019,17,2.092,19,1.336,21,2.727,36,0.259,42,0.232,43,0.067,48,0.014,49,0.014,131,3.133,211,1.915,212,3.781,213,4.786,214,4.406,215,4.406,216,4.406,217,3.916,218,4.591,219,2.437]],["title/injectables/CreateAddressProvider.html",[102,2.183,120,0.869]],["body/injectables/CreateAddressProvider.html",[1,2.026,3,0.203,4,0.18,5,0.18,7,0.668,14,1.053,15,0.019,19,1.108,36,0.385,41,1.507,42,0.203,43,0.046,48,0.013,49,0.013,56,2.026,57,2.55,58,3.246,62,1.507,63,2.137,68,2.257,69,1.826,70,1.651,71,1.679,72,0.632,77,2.257,78,1.679,80,1.679,81,1.589,82,1.43,102,3.08,111,1.507,114,2.47,120,1.226,121,1.589,123,4.458,125,3.315,126,3.622,129,3.61,130,3.315,131,3.73,140,2.291,142,3.315,145,2.685,147,2.291,150,3.315,220,5.036,221,2.685,222,3.315,223,3.863,224,3.863]],["title/classes/CreateDeliveryDto.html",[43,0.043,225,2.183]],["body/classes/CreateDeliveryDto.html",[3,0.217,4,0.192,5,0.192,7,0.713,8,1.908,14,1.306,15,0.019,16,1.908,17,2.153,19,1.375,21,2.679,36,0.243,42,0.217,43,0.064,48,0.014,49,0.014,69,2.132,211,1.792,213,4.636,217,3.967,218,4.476,219,2.282,225,3.217,226,3.54,227,5.203,228,5.203,229,6.063,230,4.125,231,4.125,232,4.125,233,4.125,234,4.125,235,4.149,236,4.125,237,4.125]],["title/classes/CreatePostDto.html",[43,0.043,238,2.815]],["body/classes/CreatePostDto.html",[3,0.179,4,0.159,5,0.159,7,0.589,8,1.676,14,1.447,15,0.019,16,2.46,19,1.523,21,2.729,42,0.179,43,0.04,48,0.012,49,0.012,70,2.301,211,1.48,238,3.644,239,2.924,240,3.819,241,2.679,242,3.819,243,3.819,244,4.203,245,4.203,246,3.819,247,4.203,248,3.819,249,5.496,250,3.819,251,4.203,252,3.407,253,3.407,254,3.407,255,3.805,256,3.407,257,3.407,258,3.407,259,3.407,260,3.407,261,3.407,262,3.407,263,3.407,264,3.407]],["title/classes/CreateProductDto.html",[43,0.043,265,2.353]],["body/classes/CreateProductDto.html",[3,0.085,4,0.075,5,0.075,7,0.278,8,0.94,14,1.436,15,0.018,16,2.176,17,1.952,19,1.246,21,2.561,27,3.54,36,0.202,42,0.085,43,0.032,48,0.007,49,0.007,69,0.94,70,1.898,183,3.017,211,0.699,217,2.84,218,3.329,219,0.89,240,3.528,241,3.429,242,3.528,243,3.085,244,3.395,245,3.395,246,3.528,247,3.883,248,3.528,250,4.059,251,3.395,255,3.398,265,1.71,266,1.381,267,3.395,268,3.432,269,3.486,270,4.299,271,2.295,272,5.142,273,1.609,274,2.557,275,1.609,276,1.609,277,2.674,278,3.694,279,3.058,280,3.432,281,2.674,282,3.058,283,3.663,284,1.609,285,1.609,286,2.674,287,2.295,288,2.674,289,1.609,290,1.609,291,2.674,292,2.674,293,2.674,294,1.609,295,1.609,296,1.609,297,2.674,298,1.609,299,1.609,300,1.609,301,1.609,302,1.609,303,2.674,304,2.674,305,1.609,306,2.045,307,2.625,308,1.118,309,2.045,310,1.609,311,2.674,312,2.045,313,2.674,314,1.609,315,3.085,316,5.316,317,0.834,318,3.432,319,4.439,320,4.357,321,1.381,322,1.381,323,1.609,324,1.381]],["title/classes/CreateUserDto.html",[43,0.043,325,2.183]],["body/classes/CreateUserDto.html",[1,2.217,3,0.191,4,0.169,5,0.169,7,0.628,8,1.752,14,1.374,15,0.019,17,2.143,19,1.368,21,2.693,36,0.334,42,0.191,43,0.067,48,0.013,49,0.013,70,1.945,131,3.384,211,1.579,213,2.778,217,3.627,218,4.252,219,2.01,320,4.879,321,3.118,325,2.954,326,3.118,327,4.348,328,4.348,329,4.879,330,4.348,331,3.633,332,3.633,333,3.633,334,3.633,335,3.633,336,3.633,337,3.633,338,3.633,339,3.633,340,2.778,341,4.982,342,3.633,343,3.633,344,4.982,345,4.982]],["title/controllers/DeliveriesController.html",[50,1.009,346,2.558]],["body/controllers/DeliveriesController.html",[3,0.157,4,0.139,5,0.139,7,0.517,9,2.185,14,1.137,15,0.019,16,2.354,17,1.991,19,1.271,36,0.301,42,0.157,43,0.035,48,0.011,49,0.011,50,0.819,52,0.861,54,1.55,56,1.693,57,3.102,62,2.323,66,1.911,68,2.437,69,1.972,70,1.783,71,1.299,72,0.489,77,1.299,78,1.299,79,1.374,80,1.299,81,1.23,82,2.205,139,1.911,225,3.685,346,3.017,347,2.566,348,2.99,349,3.726,350,3.726,351,4.814,352,3.726,353,3.726,354,2.566,355,3.031,356,2.99,357,2.566,358,3.726,359,2.99,360,2.99,361,2.566,362,3.726,363,2.99,364,2.566,365,3.726,366,2.99,367,1.911,368,2.566,369,2.574,370,2.566,371,2.99,372,2.078,373,2.99,374,2.566,375,2.99,376,2.99,377,2.99,378,2.99,379,2.99,380,2.99,381,2.99,382,2.99]],["title/modules/DeliveriesModule.html",[89,1.06,166,2.353]],["body/modules/DeliveriesModule.html",[3,0.215,4,0.19,5,0.19,15,0.019,36,0.403,42,0.215,43,0.048,48,0.014,49,0.014,52,1.55,72,0.668,89,1.736,91,1.678,92,1.678,93,1.875,94,1.875,95,1.678,96,2.772,97,1.875,101,3.339,105,2.476,106,1.875,107,1.772,109,2.792,110,2.418,111,1.591,112,2.835,166,4.532,346,4.19,369,4.06,370,3.5,383,3.5,384,3.5,385,4.079,386,4.079,387,4.079,388,2.418,389,3.5,390,4.079]],["title/entities/Delivery.html",[0,1.436,388,2.183]],["body/entities/Delivery.html",[0,1.904,2,1.951,3,0.186,4,0.164,5,0.164,7,0.61,8,1.717,9,1.969,12,2.576,14,1.39,15,0.019,16,1.717,17,2.12,18,3.579,19,1.354,21,2.559,22,3.579,23,4.195,24,4.195,36,0.287,37,3.028,38,3.862,41,1.376,42,0.186,43,0.042,48,0.012,49,0.012,69,1.969,227,4.805,228,4.805,280,4.19,388,2.895,391,3.028,392,4.199,393,3.528,394,3.528,395,3.528,396,3.528,397,3.528,398,4.882,399,3.528,400,4.19]],["title/injectables/DeliveryService.html",[120,0.869,369,2.183]],["body/injectables/DeliveryService.html",[3,0.122,4,0.108,5,0.108,7,0.399,9,2.419,12,2.471,14,1.081,15,0.019,16,2.194,19,1.203,36,0.332,41,0.901,42,0.122,43,0.027,48,0.009,49,0.009,56,1.395,57,2.963,58,3.772,62,2.199,63,2.95,68,2.317,69,1.875,70,1.695,71,1.554,72,0.378,77,1.554,78,1.554,79,1.062,80,1.554,81,1.471,82,2.087,111,0.901,120,0.844,121,0.95,126,2.95,127,2.556,140,1.369,141,1.477,144,1.477,147,2.922,200,1.605,225,3.487,349,3.07,350,3.07,351,4.23,352,3.07,353,3.07,354,1.982,357,3.07,361,3.07,364,3.07,367,1.477,368,1.982,369,2.121,372,2.486,374,1.982,388,3.78,389,1.982,401,1.982,402,2.31,403,2.31,404,3.577,405,2.31,406,2.31,407,2.31,408,2.31,409,2.31,410,2.31,411,1.766,412,1.982,413,1.982,414,2.31,415,2.798,416,3.07,417,1.982,418,2.31,419,2.31,420,4.23,421,2.31,422,4.377,423,2.31,424,2.31,425,2.31,426,1.766,427,2.31]],["title/entities/GeneralSettings.html",[0,1.436,428,2.815]],["body/entities/GeneralSettings.html",[0,2.499,2,2.975,3,0.283,4,0.251,5,0.251,15,0.018,36,0.316,41,2.097,42,0.283,43,0.064,48,0.016,49,0.016,428,4.9,429,3.438,430,4.113,431,4.616]],["title/controllers/GeneralSettingsController.html",[50,1.009,432,2.353]],["body/controllers/GeneralSettingsController.html",[3,0.278,4,0.246,5,0.246,15,0.018,36,0.31,42,0.278,43,0.062,48,0.016,49,0.016,50,1.445,52,1.519,54,2.735,72,0.863,429,3.372,430,4.034,432,4.049,433,4.527,434,4.034,435,4.844,436,5.275]],["title/modules/GeneralSettingsModule.html",[89,1.06,437,2.353]],["body/modules/GeneralSettingsModule.html",[3,0.237,4,0.21,5,0.21,15,0.019,36,0.372,42,0.237,43,0.053,48,0.015,49,0.015,52,1.652,72,0.736,89,1.819,91,1.85,92,1.85,93,2.067,94,2.067,95,1.85,96,2.905,97,2.067,105,2.638,106,2.067,107,1.954,429,2.875,432,4.039,434,3.439,437,4.495,438,3.859,439,3.859,440,4.495,441,4.497,442,3.859,443,4.497]],["title/injectables/GeneralSettingsService.html",[120,0.869,440,2.353]],["body/injectables/GeneralSettingsService.html",[3,0.285,4,0.252,5,0.252,15,0.018,36,0.318,42,0.285,43,0.064,48,0.016,49,0.016,72,0.885,120,1.517,121,2.223,429,3.455,440,4.108,444,4.638]],["title/classes/GetAddressParamDto.html",[43,0.043,87,2.353]],["body/classes/GetAddressParamDto.html",[1,2.158,3,0.224,4,0.198,5,0.198,7,0.735,8,1.946,9,2.48,14,1.37,15,0.019,16,2.292,17,1.421,19,0.908,36,0.362,42,0.224,43,0.073,48,0.014,49,0.014,87,3.538,183,2.698,211,1.848,217,3.282,219,2.352,235,4.233,241,2.698,250,2.956,270,3.538,272,4.233,274,3.538,315,3.847,317,2.205,340,3.252,445,3.649,446,3.649,447,4.253,448,4.253]],["title/injectables/GetAddressProvider.html",[103,2.183,120,0.869]],["body/injectables/GetAddressProvider.html",[1,1.947,3,0.192,4,0.17,5,0.17,7,0.63,9,2.003,12,2.108,14,0.739,15,0.019,19,1.066,36,0.377,41,1.421,42,0.192,43,0.043,48,0.013,49,0.013,56,1.947,57,2.475,58,3.151,59,4.685,62,1.421,63,2.016,68,1.584,69,1.282,70,1.159,72,0.597,77,2.17,78,2.17,79,1.676,80,2.17,81,2.054,82,1.349,103,2.96,111,1.421,114,2.33,120,1.179,121,1.499,126,3.55,127,2.88,129,3.958,140,2.161,141,2.33,145,2.533,147,2.96,221,2.533,222,3.128,415,2.33,420,3.128,449,4.888,450,2.788,451,3.645,452,3.128,453,3.645,454,3.645,455,3.645,456,3.645,457,3.645,458,3.645]],["title/classes/GetProductParamsDto.html",[43,0.043,459,2.353]],["body/classes/GetProductParamsDto.html",[3,0.232,4,0.205,5,0.205,7,0.762,8,1.991,9,2.501,14,1.269,15,0.019,16,2.323,17,1.473,19,0.94,36,0.333,42,0.232,43,0.067,48,0.014,49,0.014,183,2.761,211,1.915,217,3.358,219,2.437,235,4.331,241,2.761,250,3.062,269,2.936,270,3.62,272,4.331,274,3.62,315,3.936,317,2.284,446,3.781,459,3.62,460,3.781,461,4.406]],["title/entities/Order.html",[0,1.436,462,2.353]],["body/entities/Order.html",[0,1.474,1,1.785,2,1.373,3,0.131,4,0.116,5,0.116,7,0.429,8,1.329,9,1.61,12,0.919,14,1.423,15,0.019,16,1.329,17,2.209,18,2.927,19,1.41,21,2.535,22,3.71,23,3.71,24,3.71,26,2.627,27,2.241,32,2.891,36,0.301,38,3.858,41,0.968,42,0.131,43,0.029,48,0.01,49,0.01,70,1.627,183,1.843,255,3.272,269,3.009,278,3.557,306,3.915,308,1.725,312,3.501,392,3.557,400,2.13,462,2.417,463,2.13,464,3.929,465,4.578,466,3.501,467,4.578,468,4.578,469,4.578,470,3.929,471,3.929,472,3.244,473,2.482,474,4.438,475,3.501,476,2.482,477,2.482,478,3.501,479,2.482,480,2.482,481,2.482,482,2.482,483,3.78,484,2.482,485,2.13,486,3.78,487,3.244,488,2.482,489,3.929,490,2.482,491,3.501,492,2.482,493,2.13,494,3.244,495,2.482,496,2.482,497,2.482,498,2.482]],["title/controllers/OrdersController.html",[50,1.009,499,2.558]],["body/controllers/OrdersController.html",[3,0.283,4,0.251,5,0.251,15,0.018,36,0.316,42,0.283,43,0.064,48,0.016,49,0.016,50,1.474,52,1.548,54,2.788,72,0.88,499,4.453,500,4.616,501,4.616,502,5.378]],["title/modules/OrdersModule.html",[89,1.06,167,2.353]],["body/modules/OrdersModule.html",[3,0.227,4,0.201,5,0.201,15,0.019,36,0.399,42,0.227,43,0.051,48,0.014,49,0.014,52,1.61,72,0.707,89,1.785,91,1.777,92,1.777,93,1.986,94,1.986,95,1.777,96,2.85,97,1.986,105,2.571,106,1.986,107,1.877,109,2.239,110,2.561,111,1.685,167,4.447,462,2.761,499,4.309,503,3.707,504,3.707,505,4.447,506,4.32,507,4.32,508,4.32,509,4.32,510,4.32]],["title/injectables/OrdersService.html",[120,0.869,505,2.353]],["body/injectables/OrdersService.html",[3,0.286,4,0.253,5,0.253,15,0.018,36,0.319,42,0.286,43,0.064,48,0.016,49,0.016,72,0.889,120,1.522,121,2.234,505,4.12,511,4.661]],["title/classes/PatchAddressDto.html",[43,0.043,65,2.183]],["body/classes/PatchAddressDto.html",[3,0.275,4,0.244,5,0.244,15,0.019,36,0.37,42,0.275,43,0.062,48,0.016,49,0.016,65,3.734,131,2.89,211,2.27,317,2.709,512,4.484,513,4.816,514,6.297,515,3.996,516,5.225]],["title/injectables/PatchAddressProvider.html",[104,2.183,120,0.869]],["body/injectables/PatchAddressProvider.html",[1,2.269,3,0.17,4,0.151,5,0.151,7,0.56,9,1.138,12,2.274,14,0.932,15,0.019,19,0.981,36,0.375,41,1.262,42,0.17,43,0.038,48,0.012,49,0.012,56,1.792,57,2.322,58,2.956,60,3.515,62,1.262,63,1.79,64,2.475,65,3.785,68,1.997,69,1.616,70,1.461,71,1.406,72,0.53,73,2.475,77,1.997,78,1.997,79,2.113,80,1.997,81,1.89,82,1.198,84,2.475,104,2.725,111,1.262,114,2.069,120,1.085,121,1.331,126,3.399,127,2.773,129,3.714,140,1.919,141,2.069,145,2.249,147,3.168,200,2.249,221,2.249,415,2.938,416,2.777,417,2.777,450,2.475,517,4.586,518,3.236,519,3.236,520,3.944,521,3.944,522,2.777,523,3.236,524,4.596,525,3.236,526,4.596,527,3.236,528,4.596,529,3.236,530,3.236]],["title/classes/PatchDeliveryDto.html",[43,0.043,531,2.815]],["body/classes/PatchDeliveryDto.html",[3,0.275,4,0.244,5,0.244,15,0.019,36,0.37,42,0.275,43,0.062,48,0.016,49,0.016,211,2.27,225,3.098,317,2.709,513,4.816,515,3.996,531,4.816,532,4.484,533,6.297,534,5.225]],["title/classes/PatchUserDto.html",[43,0.043,535,2.353]],["body/classes/PatchUserDto.html",[3,0.274,4,0.242,5,0.242,15,0.019,36,0.369,42,0.274,43,0.061,48,0.016,49,0.016,211,2.259,325,3.083,513,4.802,515,3.977,535,4.014,536,4.462,537,6.279,538,4.462,539,4.462,540,5.2]],["title/entities/Product.html",[0,1.436,269,1.908]],["body/entities/Product.html",[0,1.171,2,1.025,3,0.098,4,0.086,5,0.086,7,0.321,8,1.056,9,1.683,14,1.433,15,0.019,16,2.099,17,2.199,18,2.422,19,1.404,21,2.328,22,3.903,23,2.785,24,2.785,26,4.793,27,3.539,32,2.297,36,0.223,38,3.979,39,2.578,41,0.723,42,0.098,43,0.022,48,0.008,49,0.008,69,1.683,70,1.979,183,3.131,240,2.633,241,2.334,242,2.633,243,2.633,244,2.897,245,2.897,246,2.633,247,2.897,248,2.633,251,2.897,255,3.594,267,2.897,269,1.557,278,2.088,306,3.332,307,2.897,308,2.633,322,1.59,324,1.59,392,3.028,462,3.277,464,3.251,466,2.897,471,3.251,472,3.739,474,3.92,475,2.897,478,2.897,485,1.59,487,1.59,491,2.897,494,2.578,501,3.251,541,1.59,542,1.853,543,1.853,544,1.853,545,1.853,546,5.622,547,1.853,548,1.853,549,1.853,550,1.853,551,1.853,552,3.004,553,2.578,554,1.853,555,3.004,556,3.004,557,1.853,558,1.853,559,1.853,560,1.853,561,1.853,562,1.853,563,1.853,564,1.853,565,3.004,566,1.853,567,3.004,568,1.853]],["title/controllers/ProductsController.html",[50,1.009,569,2.558]],["body/controllers/ProductsController.html",[3,0.185,4,0.164,5,0.164,7,0.608,14,0.988,15,0.019,17,1.868,19,1.193,36,0.355,42,0.185,43,0.042,48,0.012,49,0.012,50,0.964,52,1.012,54,1.823,56,1.9,57,3.022,62,2.18,68,2.117,69,1.713,70,1.549,71,1.528,72,0.576,77,1.528,78,1.528,79,1.617,80,1.528,81,1.447,82,2.069,139,2.248,265,4.19,312,3.725,355,3.314,459,4.19,569,3.386,570,3.018,571,4.18,572,4.18,573,6.034,574,3.018,575,3.517,576,3.018,577,4.871,578,3.517,579,3.517,580,3.314,581,3.018,582,3.018,583,3.018,584,3.517,585,3.517,586,3.517,587,3.517,588,3.018,589,3.517]],["title/modules/ProductsModule.html",[89,1.06,168,2.353]],["body/modules/ProductsModule.html",[3,0.215,4,0.19,5,0.19,15,0.019,36,0.403,42,0.215,43,0.048,48,0.014,49,0.014,52,1.55,72,0.668,89,1.736,91,1.678,92,1.678,93,1.875,94,1.875,95,1.678,96,2.772,97,1.875,101,3.339,105,2.476,106,1.875,107,1.772,109,2.792,110,2.418,111,1.591,112,2.835,168,4.532,269,2.114,569,4.19,580,4.06,581,3.5,590,3.5,591,4.079,592,3.5,593,4.079,594,4.079,595,4.079,596,4.079]],["title/injectables/ProductsService.html",[120,0.869,580,2.183]],["body/injectables/ProductsService.html",[3,0.123,4,0.109,5,0.109,7,0.404,8,0.821,9,1.992,12,2.317,14,0.893,15,0.019,16,1.268,19,1.209,21,0.91,27,1.384,36,0.292,42,0.123,43,0.028,48,0.009,49,0.009,56,1.406,57,2.719,62,2.09,68,1.915,69,1.55,70,1.401,71,1.014,72,0.382,77,1.567,78,1.014,79,1.073,80,1.014,81,0.96,82,1.983,120,0.851,121,0.96,127,2.461,141,1.492,144,1.492,183,1.138,192,4.861,240,2.506,241,2.148,242,2.506,243,2.506,246,2.506,248,2.506,255,1.492,265,3.621,267,2.758,269,1.87,271,2.003,274,3.775,282,1.785,283,1.785,308,4.239,309,1.785,355,3.711,367,1.492,411,4.331,412,2.003,413,2.003,415,1.492,450,1.785,452,2.003,459,3.425,520,5.067,571,3.095,572,3.095,574,2.003,576,3.095,580,2.138,582,2.003,583,2.003,588,2.003,597,2.003,598,4.957,599,4.957,600,4.957,601,2.334,602,2.334,603,4.957,604,2.334,605,2.334,606,3.095,607,3.095,608,2.334,609,2.334,610,2.758,611,2.334,612,2.334,613,2.334,614,2.334,615,2.334,616,3.606,617,2.334,618,2.334,619,4.407,620,4.957,621,3.606,622,3.606,623,3.606,624,2.334,625,2.334,626,2.334]],["title/controllers/SettingsController.html",[50,1.009,627,2.558]],["body/controllers/SettingsController.html",[3,0.269,4,0.238,5,0.238,15,0.019,36,0.365,42,0.269,43,0.06,48,0.016,49,0.016,50,1.398,52,1.469,54,2.646,66,3.262,71,2.217,72,0.835,139,3.262,317,2.646,355,3.026,435,3.903,627,4.315,628,4.379,629,4.379,630,4.379,631,5.103,632,5.103]],["title/modules/SettingsModule.html",[89,1.06,169,2.353]],["body/modules/SettingsModule.html",[3,0.224,4,0.198,5,0.198,15,0.019,36,0.397,42,0.224,43,0.05,48,0.014,49,0.014,52,1.593,72,0.696,89,1.771,91,1.749,92,1.749,93,1.955,94,1.955,95,1.749,96,2.545,97,1.955,105,2.545,106,1.955,107,1.848,109,2.869,169,4.428,432,3.934,434,4.233,437,4.428,442,4.75,627,4.276,633,4.253,634,4.253,635,4.253,636,4.253,637,5.535,638,4.253]],["title/entities/User.html",[0,1.436,12,1.363]],["body/entities/User.html",[0,1.487,1,2.493,2,1.389,3,0.132,4,0.117,5,0.117,7,0.434,8,1.341,9,1.621,12,1.411,14,1.392,15,0.019,16,1.341,17,2.179,18,2.947,19,1.391,21,2.434,22,3.291,23,3.99,24,3.99,25,5.003,26,4.338,27,3.701,30,2.155,36,0.271,38,3.539,40,3.272,41,0.979,42,0.132,43,0.03,47,2.916,48,0.01,49,0.01,70,1.212,183,3.043,327,3.526,328,3.526,329,3.957,330,3.526,372,3.204,388,3.456,392,2.65,466,3.526,474,4.458,475,3.526,478,3.526,491,3.526,493,3.272,553,3.272,639,2.155,640,4.61,641,4.61,642,3.813,643,2.511,644,2.511,645,2.511,646,2.511,647,3.813,648,2.511,649,5.149,650,2.511,651,2.511,652,2.511,653,2.511,654,2.511,655,2.511,656,2.511,657,2.511]],["title/controllers/UsersController.html",[50,1.009,658,2.558]],["body/controllers/UsersController.html",[3,0.137,4,0.121,5,0.121,7,0.451,9,2.35,12,2.271,14,1.141,15,0.019,16,2.271,17,1.754,19,1.12,36,0.331,42,0.137,43,0.031,48,0.01,49,0.01,50,0.714,52,0.75,54,1.351,56,1.53,57,2.943,62,2.046,66,1.666,68,2.28,69,1.845,70,1.668,71,1.704,72,0.427,77,1.132,78,1.132,79,1.198,80,1.132,81,1.072,82,1.942,127,2.049,139,1.666,144,2.507,241,2.299,270,2.507,274,2.507,315,2.726,317,1.351,325,3.638,355,2.325,358,3.366,362,2.236,365,3.366,367,1.666,470,2.236,535,3.78,629,4.503,630,2.236,658,2.726,659,2.236,660,3.922,661,3.366,662,3.922,663,3.922,664,4.716,665,2.236,666,2.606,667,2.606,668,2.606,669,3.922,670,3.366,671,2.606,672,2.606,673,2.606,674,2.606,675,2.606,676,2.606,677,2.606,678,2.606,679,2.606,680,3.922,681,4.716,682,3.922,683,2.236,684,2.236,685,2.236,686,2.606,687,2.606,688,3.922,689,2.606,690,2.606,691,2.236,692,2.606,693,2.606,694,2.606,695,2.606,696,2.606]],["title/modules/UsersModule.html",[89,1.06,101,1.795]],["body/modules/UsersModule.html",[3,0.211,4,0.187,5,0.187,12,1.482,15,0.019,36,0.401,42,0.211,43,0.047,48,0.013,49,0.013,52,1.532,72,0.655,89,1.72,91,1.647,92,1.647,93,1.841,94,1.841,95,1.647,96,2.747,97,2.747,101,3.389,105,2.446,106,1.841,107,1.74,109,2.076,110,2.374,111,1.562,127,3.183,165,3.154,207,4.069,658,4.152,685,3.436,697,3.436,698,3.436,699,3.436,700,4.004,701,4.004,702,3.436,703,4.004,704,4.004]],["title/injectables/UsersService.html",[120,0.869,127,1.599]],["body/injectables/UsersService.html",[3,0.118,4,0.104,5,0.104,7,0.387,9,2.045,12,2.061,14,1.065,15,0.019,16,2.173,19,1.122,36,0.354,41,0.873,42,0.118,43,0.026,47,1.712,48,0.009,49,0.009,56,1.362,57,2.842,58,3.618,62,1.89,63,2.681,68,2.283,69,1.848,70,1.671,71,0.973,72,0.367,77,1.517,78,1.865,79,1.605,80,1.517,81,1.436,82,1.945,111,0.873,120,0.824,121,0.921,126,2.907,127,1.517,135,1.712,140,1.328,144,1.431,147,3.116,183,2.092,200,1.556,205,3.448,207,1.712,325,3.448,327,1.712,328,1.712,330,1.712,355,1.328,367,3.099,372,1.556,415,3.099,426,2.67,435,1.712,535,3.559,606,1.922,607,2.996,610,1.712,661,2.996,665,1.922,670,1.922,683,1.922,684,1.922,691,1.922,702,1.922,705,1.922,706,3.492,707,3.492,708,2.239,709,4.292,710,2.239,711,2.239,712,3.492,713,2.239,714,3.492,715,2.239,716,2.239,717,2.239,718,2.239,719,2.67,720,2.239,721,2.239,722,2.239,723,2.239,724,2.239,725,2.239,726,2.239,727,3.492,728,3.492,729,2.239,730,2.239,731,2.239,732,3.492,733,2.239,734,2.239,735,2.239,736,2.239,737,2.239,738,2.239,739,2.239,740,2.239,741,2.239,742,2.239,743,2.239,744,2.239,745,3.492,746,2.239]],["title/coverage.html",[747,3.844]],["body/coverage.html",[0,2.285,1,0.993,5,0.119,6,2.185,12,0.942,14,0.516,15,0.019,43,0.077,48,0.01,49,0.01,50,1.758,51,1.769,53,2.185,65,1.509,74,1.509,87,1.627,95,1.047,102,1.509,103,1.509,104,1.509,120,1.569,122,2.185,127,1.106,131,1.408,153,1.769,154,2.185,157,1.509,194,2.185,198,1.769,199,2.185,205,1.509,210,2.185,212,2.185,220,2.185,221,3.231,225,1.509,226,2.185,238,1.947,239,2.185,265,1.627,266,2.185,269,1.32,282,5.733,325,1.509,326,2.185,346,1.769,347,2.185,369,1.509,388,1.509,391,2.185,401,2.185,428,1.947,429,2.972,430,2.947,431,2.185,432,1.627,433,2.185,440,1.627,444,2.185,445,2.185,449,2.185,459,1.627,460,2.185,462,1.627,463,2.185,499,1.769,500,2.185,505,1.627,511,2.185,512,2.185,517,2.185,531,1.947,532,2.185,535,1.627,536,2.185,541,2.185,569,1.769,570,2.185,580,1.509,597,2.185,627,1.769,628,2.185,639,2.185,658,1.769,659,2.185,705,2.185,719,1.947,747,1.947,748,2.185,749,2.546,750,2.546,751,5.185,752,7.092,753,2.185,754,2.546,755,2.546,756,2.546,757,3.853,758,3.853,759,5.185,760,2.185,761,2.546,762,2.546,763,2.546,764,4.65,765,3.853,766,2.546,767,2.546,768,2.546]],["title/dependencies.html",[92,1.822,769,2.637]],["body/dependencies.html",[15,0.019,41,1.711,43,0.067,48,0.014,49,0.014,72,0.718,92,1.805,111,1.711,219,2.428,317,2.275,340,3.356,522,3.766,538,3.766,539,3.766,770,4.389,771,4.389,772,6.247,773,4.389,774,4.389,775,4.389,776,4.389,777,4.389,778,4.389,779,4.389,780,4.389,781,4.389,782,6.247,783,4.389,784,4.389,785,4.389,786,6.247,787,4.389,788,4.389,789,4.389,790,4.389,791,4.389,792,4.389,793,4.389,794,4.389,795,4.389,796,4.389,797,4.389]],["title/miscellaneous/enumerations.html",[798,1.822,799,3.8]],["body/miscellaneous/enumerations.html",[7,0.829,15,0.019,48,0.015,49,0.015,279,5.602,307,4.567,309,4.567,489,5.125,798,2.841,799,4.112,800,4.791,801,4.791,802,4.791,803,5.972,804,5.972,805,5.972,806,5.972,807,5.972,808,4.791,809,5.972,810,5.972]],["title/miscellaneous/functions.html",[798,1.822,811,3.8]],["body/miscellaneous/functions.html",[7,0.978,15,0.017,48,0.017,49,0.017,95,2.875,753,4.853,798,3.353,811,4.853,812,5.656]],["title/index.html",[7,0.531,813,3.073,814,3.073]],["body/index.html",[4,0.12,15,0.018,48,0.01,49,0.01,107,2.558,126,1.425,135,1.97,241,1.256,270,3.334,287,4.476,411,1.97,426,1.97,521,2.21,610,4.502,747,1.97,748,3.336,815,2.575,816,2.575,817,4.683,818,3.887,819,2.575,820,2.575,821,2.575,822,2.575,823,3.887,824,4.683,825,2.575,826,2.575,827,5.216,828,2.575,829,6.291,830,2.575,831,6.111,832,2.575,833,2.575,834,2.575,835,3.887,836,2.575,837,3.887,838,2.575,839,4.683,840,2.575,841,3.887,842,2.575,843,2.575,844,2.575,845,2.575,846,2.575,847,5.216,848,6.291,849,5.887,850,2.575,851,3.887,852,2.575,853,2.575,854,2.575,855,2.575,856,2.575,857,3.887,858,2.575,859,3.887,860,2.575,861,3.887,862,5.887,863,5.216,864,2.575,865,3.887,866,2.575,867,2.575,868,2.575,869,2.575,870,5.216,871,2.575,872,2.575,873,2.575,874,2.575,875,3.887,876,2.575,877,2.575,878,2.575,879,2.575,880,2.575,881,3.887,882,2.575,883,2.575,884,2.575,885,3.887,886,2.575,887,2.575,888,4.476,889,3.887,890,2.575,891,2.575,892,2.575,893,2.575,894,2.575,895,2.575,896,2.575,897,2.575,898,3.887,899,2.575,900,2.575,901,2.575,902,2.575,903,4.683,904,2.575,905,2.575,906,2.575,907,2.575,908,3.887,909,2.575,910,2.575,911,2.575,912,2.575,913,3.887,914,2.575,915,2.575,916,2.575,917,3.887,918,3.887,919,2.575,920,2.575,921,2.575,922,2.575,923,2.575,924,2.575,925,2.575,926,2.575,927,2.575,928,2.575,929,2.575,930,2.21,931,2.575,932,2.575,933,2.575,934,2.575,935,2.575,936,2.575,937,2.21]],["title/modules.html",[91,2.068]],["body/modules.html",[15,0.015,48,0.015,49,0.015,90,3.023,91,1.945,101,2.306,161,3.287,165,2.804,166,3.023,167,3.023,168,3.023,169,3.023,437,3.023,888,6.325,938,7.371,939,7.371,940,7.371]],["title/overview.html",[941,4.314]],["body/overview.html",[2,1.649,15,0.019,48,0.011,49,0.011,52,0.858,74,3.026,89,0.858,90,4.493,91,1.226,92,1.226,93,1.371,94,1.371,95,1.226,96,1.371,97,1.371,98,2.559,99,2.559,100,2.559,101,3.262,102,3.026,103,3.026,104,3.026,105,1.992,106,1.371,107,1.295,121,1.226,127,2.784,157,3.026,161,5.043,162,2.559,163,2.559,164,2.559,165,3.681,166,4.096,167,3.804,168,4.096,169,3.804,202,2.559,203,2.559,204,2.559,205,3.799,211,1.295,283,2.28,369,3.026,383,2.559,384,2.559,437,3.804,438,2.559,439,2.559,440,3.263,503,2.559,504,2.559,505,3.263,580,3.026,590,2.559,592,2.559,697,2.559,698,2.559,699,2.559,941,2.559,942,4.333,943,2.981,944,2.981]],["title/properties.html",[8,1.557,769,2.637]],["body/properties.html",[8,1.958,15,0.019,48,0.017,49,0.017,241,2.715,930,4.78,937,4.78,945,5.569,946,5.569,947,5.569]],["title/miscellaneous/variables.html",[798,1.822,948,3.8]],["body/miscellaneous/variables.html",[7,0.912,10,4.034,11,4.034,13,4.034,14,1.069,15,0.019,48,0.016,49,0.016,278,3.666,279,4.034,719,4.844,760,4.527,798,3.127,948,4.527,949,5.275,950,5.275,951,5.275,952,5.275,953,5.275,954,5.275]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":946,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["1.1.26",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["1/6",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["10.0.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Delivery.html":{}}}],["1000",{"_index":44,"title":{},"body":{"entities/Address.html":{}}}],["11",{"_index":944,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["128",{"_index":25,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["16",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["16000",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":619,"title":{},"body":{"injectables/ProductsService.html":{}}}],["2.1.0",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":483,"title":{},"body":{"entities/Order.html":{}}}],["201",{"_index":669,"title":{},"body":{"controllers/UsersController.html":{}}}],["255",{"_index":392,"title":{},"body":{"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["3",{"_index":623,"title":{},"body":{"injectables/ProductsService.html":{}}}],["3.0.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":626,"title":{},"body":{"injectables/ProductsService.html":{}}}],["4.0.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["48000",{"_index":45,"title":{},"body":{"entities/Address.html":{}}}],["5432",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["58000",{"_index":46,"title":{},"body":{"entities/Address.html":{}}}],["5kg",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["6",{"_index":943,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["8.13.3",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":942,"title":{},"body":{"overview.html":{}}}],["action",{"_index":422,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["address",{"_index":1,"title":{"entities/Address.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateUserDto.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/User.html":{},"coverage.html":{}}}],["address.controller",{"_index":113,"title":{},"body":{"modules/AddressModule.html":{}}}],["address.entity",{"_index":114,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{}}}],["address.municipality",{"_index":526,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["address.postalcode",{"_index":528,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["address.provider",{"_index":116,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{}}}],["address.provider.ts",{"_index":221,"title":{},"body":{"injectables/CreateAddressProvider.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"coverage.html":{}}}],["address.provider.ts:14",{"_index":223,"title":{},"body":{"injectables/CreateAddressProvider.html":{}}}],["address.provider.ts:16",{"_index":451,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["address.provider.ts:17",{"_index":519,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["address.provider.ts:8",{"_index":222,"title":{},"body":{"injectables/CreateAddressProvider.html":{},"injectables/GetAddressProvider.html":{}}}],["address.provider.ts:9",{"_index":518,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["address.user",{"_index":642,"title":{},"body":{"entities/User.html":{}}}],["address.wilaya",{"_index":524,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["addresscontroller",{"_index":51,"title":{"controllers/AddressController.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"coverage.html":{}}}],["addressmodule",{"_index":90,"title":{"modules/AddressModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addressrepository",{"_index":129,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{}}}],["addressservice",{"_index":74,"title":{"injectables/AddressService.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"coverage.html":{},"overview.html":{}}}],["akkadli",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["alger",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algier",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowing",{"_index":876,"title":{},"body":{"index.html":{}}}],["already",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":923,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":680,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiid",{"_index":227,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"entities/Delivery.html":{}}}],["apioperation",{"_index":681,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":315,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"controllers/UsersController.html":{}}}],["apiproperty({title",{"_index":303,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apipropertyoptional",{"_index":316,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apipropertyoptional({title",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiresponse",{"_index":682,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":630,"title":{},"body":{"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["apitags('settings",{"_index":632,"title":{},"body":{"controllers/SettingsController.html":{}}}],["apitags('users",{"_index":687,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitoken",{"_index":228,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"entities/Delivery.html":{}}}],["app.controller",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":153,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":849,"title":{},"body":{"index.html":{}}}],["applications",{"_index":823,"title":{},"body":{"index.html":{}}}],["apply",{"_index":423,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["appmodule",{"_index":161,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":157,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asked",{"_index":624,"title":{},"body":{"injectables/ProductsService.html":{}}}],["async",{"_index":58,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DeliveryService.html":{},"injectables/PatchAddressProvider.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":198,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":455,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["authmodule",{"_index":165,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":930,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":205,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["autor",{"_index":618,"title":{},"body":{"injectables/ProductsService.html":{}}}],["await",{"_index":147,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":865,"title":{},"body":{"index.html":{}}}],["backers",{"_index":924,"title":{},"body":{"index.html":{}}}],["based",{"_index":411,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["board",{"_index":916,"title":{},"body":{"index.html":{}}}],["body",{"_index":71,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["boolean",{"_index":255,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":940,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":938,"title":{},"body":{"modules.html":{}}}],["building",{"_index":818,"title":{},"body":{"index.html":{}}}],["cancelled",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":47,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["cascade'})@joincolumn",{"_index":33,"title":{},"body":{"entities/Address.html":{}}}],["center",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":413,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["changes",{"_index":424,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["channel",{"_index":891,"title":{},"body":{"index.html":{}}}],["check",{"_index":610,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["class",{"_index":43,"title":{"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"classes/PatchAddressDto.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":211,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"classes/PatchAddressDto.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":875,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":860,"title":{},"body":{"index.html":{}}}],["cluster_addressmodule",{"_index":98,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_imports",{"_index":100,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_providers",{"_index":99,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_deliveriesmodule",{"_index":383,"title":{},"body":{"modules/DeliveriesModule.html":{},"overview.html":{}}}],["cluster_deliveriesmodule_imports",{"_index":385,"title":{},"body":{"modules/DeliveriesModule.html":{}}}],["cluster_deliveriesmodule_providers",{"_index":384,"title":{},"body":{"modules/DeliveriesModule.html":{},"overview.html":{}}}],["cluster_generalsettingsmodule",{"_index":438,"title":{},"body":{"modules/GeneralSettingsModule.html":{},"overview.html":{}}}],["cluster_generalsettingsmodule_providers",{"_index":439,"title":{},"body":{"modules/GeneralSettingsModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":503,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":504,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":590,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":591,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":592,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":633,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_imports",{"_index":634,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_usersmodule",{"_index":697,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":698,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":699,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["color",{"_index":240,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["column",{"_index":38,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["column({type",{"_index":22,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["come",{"_index":882,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["confirmed",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log('from",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createuserdto.address",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(id",{"_index":736,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(patchuserdto",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(user",{"_index":417,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/PatchAddressProvider.html":{}}}],["const",{"_index":415,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(addressrepository",{"_index":125,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{}}}],["constructor(authservice",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(deliveryrepository",{"_index":402,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["constructor(private",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(usersservice",{"_index":450,"title":{},"body":{"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{}}}],["controller",{"_index":50,"title":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveriesController.html":{},"controllers/GeneralSettingsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeliveriesController.html":{},"controllers/GeneralSettingsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('general",{"_index":436,"title":{},"body":{"controllers/GeneralSettingsController.html":{}}}],["controller('orders",{"_index":502,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('products",{"_index":584,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('settings",{"_index":631,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('settings/address",{"_index":76,"title":{},"body":{"controllers/AddressController.html":{}}}],["controller('settings/deliveries",{"_index":371,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["controller('users",{"_index":686,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":52,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":897,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":747,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":144,"title":{},"body":{"injectables/AddressService.html":{},"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createaddress",{"_index":123,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{}}}],["createaddress(@body",{"_index":150,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{}}}],["createaddress(createaddressdto",{"_index":130,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{}}}],["createaddress.dto",{"_index":516,"title":{},"body":{"classes/PatchAddressDto.html":{}}}],["createaddressdto",{"_index":131,"title":{"classes/CreateAddressDto.html":{}},"body":{"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateUserDto.html":{},"classes/PatchAddressDto.html":{},"coverage.html":{}}}],["createaddressprovider",{"_index":102,"title":{"injectables/CreateAddressProvider.html":{}},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":670,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":464,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{}}}],["createdate",{"_index":640,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn",{"_index":475,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["createdeliveries.dto",{"_index":534,"title":{},"body":{"classes/PatchDeliveryDto.html":{}}}],["createdelivery",{"_index":349,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["createdelivery(@body",{"_index":374,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["createdelivery(createdeliverydto",{"_index":354,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["createdeliverydto",{"_index":225,"title":{"classes/CreateDeliveryDto.html":{}},"body":{"classes/CreateDeliveryDto.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"classes/PatchDeliveryDto.html":{},"coverage.html":{}}}],["createpostdto",{"_index":238,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["createproduct",{"_index":571,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(@body",{"_index":588,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":574,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":265,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createuser",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":665,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser.dto",{"_index":540,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["createuserdto",{"_index":325,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.address",{"_index":732,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.email",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto})@apiresponse({status",{"_index":668,"title":{},"body":{"controllers/UsersController.html":{}}}],["current",{"_index":613,"title":{},"body":{"injectables/ProductsService.html":{}}}],["customername",{"_index":465,"title":{},"body":{"entities/Order.html":{}}}],["database",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProductsService.html":{}}}],["date",{"_index":474,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["db",{"_index":612,"title":{},"body":{"injectables/ProductsService.html":{}}}],["declarations",{"_index":94,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"controllers/AppController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":893,"title":{},"body":{"index.html":{}}}],["default",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"miscellaneous/variables.html":{}}}],["defaultaddress",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":367,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete('/:id",{"_index":358,"title":{},"body":{"controllers/DeliveriesController.html":{},"controllers/UsersController.html":{}}}],["delete(id",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleted",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletedat",{"_index":466,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["deletedatecolumn",{"_index":478,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["deletedelivery",{"_index":350,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["deletedelivery(@param('id",{"_index":381,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["deletedelivery(id",{"_index":357,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["deleteproduct",{"_index":598,"title":{},"body":{"injectables/ProductsService.html":{}}}],["deleteusers",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(@param('id",{"_index":695,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers(id",{"_index":672,"title":{},"body":{"controllers/UsersController.html":{}}}],["delivered",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deliveries",{"_index":372,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["deliveries.controller",{"_index":387,"title":{},"body":{"modules/DeliveriesModule.html":{}}}],["deliveriescontroller",{"_index":346,"title":{"controllers/DeliveriesController.html":{}},"body":{"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"coverage.html":{}}}],["deliveriesmodule",{"_index":166,"title":{"modules/DeliveriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveriesModule.html":{},"modules.html":{},"overview.html":{}}}],["deliveriesservice",{"_index":373,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["delivery",{"_index":388,"title":{"entities/Delivery.html":{}},"body":{"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/User.html":{},"coverage.html":{}}}],["delivery.entity",{"_index":389,"title":{},"body":{"modules/DeliveriesModule.html":{},"injectables/DeliveryService.html":{}}}],["delivery.user",{"_index":647,"title":{},"body":{"entities/User.html":{}}}],["deliveryrepository",{"_index":404,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliveryservice",{"_index":369,"title":{"injectables/DeliveryService.html":{}},"body":{"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"injectables/DeliveryService.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":847,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":864,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":857,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":874,"title":{},"body":{"index.html":{}}}],["description",{"_index":241,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":832,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":904,"title":{},"body":{"index.html":{}}}],["discord",{"_index":890,"title":{},"body":{"index.html":{}}}],["discount",{"_index":242,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["dive",{"_index":892,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":748,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dtos/createaddress.dto",{"_index":142,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{}}}],["dtos/createdeliveries.dto",{"_index":368,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["dtos/createproduct.dto",{"_index":583,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/createuser.dto",{"_index":683,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/getaddressparam.dto",{"_index":143,"title":{},"body":{"injectables/AddressService.html":{}}}],["dtos/getproductparams.dto",{"_index":582,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/patchaddress.dto",{"_index":73,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/PatchAddressProvider.html":{}}}],["dtos/patchuser.dto",{"_index":684,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":842,"title":{},"body":{"index.html":{}}}],["eager",{"_index":553,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["efficient",{"_index":819,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":855,"title":{},"body":{"index.html":{}}}],["email",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":853,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":907,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/GeneralSettings.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/GeneralSettings.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/GeneralSettings.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":306,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/Product.html":{}}}],["enumerations",{"_index":799,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/orderstatus.enum",{"_index":496,"title":{},"body":{"entities/Order.html":{}}}],["enums/productsize",{"_index":322,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["error",{"_index":607,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["exist",{"_index":611,"title":{},"body":{"injectables/ProductsService.html":{}}}],["exists",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["experience",{"_index":895,"title":{},"body":{"index.html":{}}}],["export",{"_index":42,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":513,"title":{},"body":{"classes/PatchAddressDto.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{}}}],["externaltrackingid",{"_index":467,"title":{},"body":{"entities/Order.html":{}}}],["facebook",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":27,"title":{},"body":{"entities/Address.html":{},"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{}}}],["fast",{"_index":868,"title":{},"body":{"index.html":{}}}],["features",{"_index":878,"title":{},"body":{"index.html":{}}}],["ferhatsaki",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["few",{"_index":870,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":520,"title":{},"body":{"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{}}}],["findall",{"_index":599,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findallbyuserid",{"_index":351,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["findonebyid",{"_index":352,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["findonebyid(@param('id",{"_index":377,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["findonebyid(id",{"_index":361,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["finduserbyid",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid(id",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["float",{"_index":546,"title":{},"body":{"entities/Product.html":{}}}],["focus",{"_index":877,"title":{},"body":{"index.html":{}}}],["follow",{"_index":910,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["found",{"_index":616,"title":{},"body":{"injectables/ProductsService.html":{}}}],["framework",{"_index":817,"title":{},"body":{"index.html":{}}}],["full",{"_index":906,"title":{},"body":{"index.html":{}}}],["function",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":811,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":873,"title":{},"body":{"index.html":{}}}],["general",{"_index":434,"title":{},"body":{"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"modules/SettingsModule.html":{}}}],["general_settings.module",{"_index":636,"title":{},"body":{"modules/SettingsModule.html":{}}}],["generalsettings",{"_index":428,"title":{"entities/GeneralSettings.html":{}},"body":{"entities/GeneralSettings.html":{},"coverage.html":{}}}],["generalsettingscontroller",{"_index":432,"title":{"controllers/GeneralSettingsController.html":{}},"body":{"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["generalsettingsmodule",{"_index":437,"title":{"modules/GeneralSettingsModule.html":{}},"body":{"modules/GeneralSettingsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["generalsettingsservice",{"_index":440,"title":{"injectables/GeneralSettingsService.html":{}},"body":{"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"coverage.html":{},"overview.html":{}}}],["get('/:id",{"_index":362,"title":{},"body":{"controllers/DeliveriesController.html":{},"controllers/UsersController.html":{}}}],["get('/:id')@apioperation({summary",{"_index":675,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":577,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getaddressbyid",{"_index":124,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyid(@param",{"_index":86,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["getaddressbyid(getaddressparamdto",{"_index":133,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuserid",{"_index":59,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/GetAddressProvider.html":{}}}],["getaddressparamdto",{"_index":87,"title":{"classes/GetAddressParamDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/GetAddressParamDto.html":{},"coverage.html":{}}}],["getaddressprovider",{"_index":103,"title":{"injectables/GetAddressProvider.html":{}},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/GetAddressProvider.html":{},"coverage.html":{},"overview.html":{}}}],["gethello",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getit",{"_index":414,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["getproductbyid",{"_index":572,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproductbyid(@param",{"_index":586,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(getproductparamsdto",{"_index":576,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproductparamsdto",{"_index":459,"title":{"classes/GetProductParamsDto.html":{}},"body":{"classes/GetProductParamsDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["getproducts",{"_index":573,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getting",{"_index":813,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@param('id",{"_index":689,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":674,"title":{},"body":{"controllers/UsersController.html":{}}}],["googleid",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["graph",{"_index":900,"title":{},"body":{"index.html":{}}}],["grow",{"_index":920,"title":{},"body":{"index.html":{}}}],["hands",{"_index":894,"title":{},"body":{"index.html":{}}}],["handy",{"_index":883,"title":{},"body":{"index.html":{}}}],["heavy",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["heavyweight",{"_index":243,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["hello",{"_index":196,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":898,"title":{},"body":{"index.html":{}}}],["here",{"_index":928,"title":{},"body":{"index.html":{}}}],["host",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["https://example.com/image.jpg",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["https://nestjs.com",{"_index":934,"title":{},"body":{"index.html":{}}}],["id",{"_index":9,"title":{},"body":{"entities/Address.html":{},"injectables/AddressService.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiproperty({description",{"_index":676,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":622,"title":{},"body":{"injectables/ProductsService.html":{}}}],["image",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["imageurl",{"_index":244,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["import",{"_index":36,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":858,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":880,"title":{},"body":{"index.html":{}}}],["inject",{"_index":78,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":120,"title":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GeneralSettingsService.html":{},"injectables/GetAddressProvider.html":{},"injectables/OrdersService.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GeneralSettingsService.html":{},"injectables/GetAddressProvider.html":{},"injectables/OrdersService.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":121,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GeneralSettingsService.html":{},"injectables/GetAddressProvider.html":{},"injectables/OrdersService.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":140,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/UsersService.html":{}}}],["injectrepository(address",{"_index":145,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{}}}],["injectrepository(delivery",{"_index":410,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["injectrepository(user",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":872,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":830,"title":{},"body":{"index.html":{}}}],["instock",{"_index":245,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["interact",{"_index":901,"title":{},"body":{"index.html":{}}}],["inversejoincolumn",{"_index":556,"title":{},"body":{"entities/Product.html":{}}}],["isboolean",{"_index":318,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isboolean()@isnotempty()@apipropertyoptional({title",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isboolean()@isoptional()@apipropertyoptional({title",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isemail",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isexternal",{"_index":468,"title":{},"body":{"entities/Order.html":{}}}],["isint",{"_index":235,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{}}}],["isint()@isnotempty",{"_index":233,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["isint()@isnotempty()@apiproperty({title",{"_index":446,"title":{},"body":{"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{}}}],["isnotempty",{"_index":217,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{}}}],["isnotempty()@isnumber()@apiproperty({title",{"_index":299,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumber",{"_index":319,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":320,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isoptional()@isnumber()@apipropertyoptional({title",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional()@type(undefined",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":218,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":213,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@maxlength(128)@minlength(3",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@maxlength(255)@apiproperty({title",{"_index":301,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@isoptional()@apipropertyoptional({title",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(128",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["job",{"_index":913,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":915,"title":{},"body":{"index.html":{}}}],["join",{"_index":926,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":39,"title":{},"body":{"entities/Address.html":{},"entities/Product.html":{}}}],["jointable",{"_index":565,"title":{},"body":{"entities/Product.html":{}}}],["kamil",{"_index":931,"title":{},"body":{"index.html":{}}}],["key",{"_index":850,"title":{},"body":{"index.html":{}}}],["large",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastname",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["later",{"_index":412,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["learn",{"_index":886,"title":{},"body":{"index.html":{}}}],["legend",{"_index":93,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":24,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["license",{"_index":937,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":918,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":912,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":859,"title":{},"body":{"index.html":{}}}],["loop",{"_index":909,"title":{},"body":{"index.html":{}}}],["makes",{"_index":866,"title":{},"body":{"index.html":{}}}],["managing",{"_index":879,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":494,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{}}}],["manytomany(undefined",{"_index":485,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{}}}],["manytoone",{"_index":400,"title":{},"body":{"entities/Delivery.html":{},"entities/Order.html":{}}}],["manytoone(undefined",{"_index":397,"title":{},"body":{"entities/Delivery.html":{}}}],["matching",{"_index":49,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":862,"title":{},"body":{"index.html":{}}}],["max",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["maxlength",{"_index":321,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["maxlength(128",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(255",{"_index":323,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["medium",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["message",{"_index":606,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":56,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":798,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":917,"title":{},"body":{"index.html":{}}}],["mode",{"_index":835,"title":{},"body":{"index.html":{}}}],["module",{"_index":89,"title":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{}}}],["municipality",{"_index":10,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":932,"title":{},"body":{"index.html":{}}}],["name",{"_index":69,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateProductDto.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":135,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["nest",{"_index":824,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":936,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":848,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":72,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"injectables/DeliveryService.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"injectables/GetAddressProvider.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":538,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":317,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"classes/PatchAddressDto.html":{},"classes/PatchDeliveryDto.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":111,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/CreateAddressProvider.html":{},"modules/DeliveriesModule.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"modules/OrdersModule.html":{},"injectables/PatchAddressProvider.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":816,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":26,"title":{},"body":{"entities/Address.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["number",{"_index":16,"title":{},"body":{"entities/Address.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["number'})@isnumber()@isnotempty",{"_index":304,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["number'})@type(undefined",{"_index":447,"title":{},"body":{"classes/GetAddressParamDto.html":{}}}],["object",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offer",{"_index":914,"title":{},"body":{"index.html":{}}}],["official",{"_index":863,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":32,"title":{},"body":{"entities/Address.html":{},"entities/Order.html":{},"entities/Product.html":{}}}],["onetomany",{"_index":493,"title":{},"body":{"entities/Order.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":646,"title":{},"body":{"entities/User.html":{}}}],["onetoone",{"_index":40,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["onetoone(undefined",{"_index":30,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["open",{"_index":919,"title":{},"body":{"index.html":{}}}],["optional",{"_index":70,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":462,"title":{"entities/Order.html":{}},"body":{"entities/Order.html":{},"modules/OrdersModule.html":{},"entities/Product.html":{},"coverage.html":{}}}],["order.entity",{"_index":509,"title":{},"body":{"modules/OrdersModule.html":{}}}],["order.products",{"_index":552,"title":{},"body":{"entities/Product.html":{}}}],["order_id",{"_index":568,"title":{},"body":{"entities/Product.html":{}}}],["order_products",{"_index":555,"title":{},"body":{"entities/Product.html":{}}}],["orders",{"_index":501,"title":{},"body":{"controllers/OrdersController.html":{},"entities/Product.html":{}}}],["orders.controller",{"_index":507,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":499,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":167,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":505,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":489,"title":{},"body":{"entities/Order.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.pending",{"_index":498,"title":{},"body":{"entities/Order.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":941,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":769,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":139,"title":{},"body":{"injectables/AddressService.html":{},"controllers/DeliveriesController.html":{},"controllers/ProductsController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":629,"title":{},"body":{"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["part",{"_index":905,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":515,"title":{},"body":{"classes/PatchAddressDto.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createaddressdto",{"_index":514,"title":{},"body":{"classes/PatchAddressDto.html":{}}}],["partialtype(createdeliverydto",{"_index":533,"title":{},"body":{"classes/PatchDeliveryDto.html":{}}}],["partialtype(createuserdto",{"_index":537,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["passport",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":66,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/DeliveriesController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":365,"title":{},"body":{"controllers/DeliveriesController.html":{},"controllers/UsersController.html":{}}}],["patchaddressdto",{"_index":65,"title":{"classes/PatchAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"coverage.html":{}}}],["patchaddressdto.municipality",{"_index":527,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["patchaddressdto.postalcode",{"_index":529,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["patchaddressdto.wilaya",{"_index":525,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["patchaddressprovider",{"_index":104,"title":{"injectables/PatchAddressProvider.html":{}},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/PatchAddressProvider.html":{},"coverage.html":{},"overview.html":{}}}],["patchdeliverydto",{"_index":531,"title":{"classes/PatchDeliveryDto.html":{}},"body":{"classes/PatchDeliveryDto.html":{},"coverage.html":{}}}],["patchuserdto",{"_index":535,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchuserdto.firstname",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["patchuserdto.lastname",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["patchusers",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":678,"title":{},"body":{"controllers/UsersController.html":{}}}],["pending",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":469,"title":{},"body":{"entities/Order.html":{}}}],["platform",{"_index":861,"title":{},"body":{"index.html":{}}}],["please",{"_index":889,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":829,"title":{},"body":{"index.html":{}}}],["port",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":856,"title":{},"body":{"index.html":{}}}],["post",{"_index":355,"title":{},"body":{"controllers/DeliveriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["post()@apioperation({summary",{"_index":666,"title":{},"body":{"controllers/UsersController.html":{}}}],["postalcode",{"_index":11,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"miscellaneous/variables.html":{}}}],["postgres",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["posts",{"_index":617,"title":{},"body":{"injectables/ProductsService.html":{}}}],["prefix",{"_index":54,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/DeliveriesController.html":{},"controllers/GeneralSettingsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/SettingsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":246,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["primarygeneratedcolumn",{"_index":18,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["private",{"_index":80,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":269,"title":{"entities/Product.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["product(0",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":594,"title":{},"body":{"modules/ProductsModule.html":{}}}],["product.orders",{"_index":486,"title":{},"body":{"entities/Order.html":{}}}],["product_id",{"_index":566,"title":{},"body":{"entities/Product.html":{}}}],["production",{"_index":837,"title":{},"body":{"index.html":{}}}],["productname",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["products",{"_index":312,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Order.html":{},"controllers/ProductsController.html":{}}}],["products.controller",{"_index":595,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":569,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsize",{"_index":307,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{},"miscellaneous/enumerations.html":{}}}],["productsize.small",{"_index":324,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["productsmodule",{"_index":168,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":580,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":815,"title":{},"body":{"index.html":{}}}],["project",{"_index":827,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Delivery.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"properties.html":{}}}],["provider",{"_index":146,"title":{},"body":{"injectables/AddressService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/address.service",{"_index":75,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{}}}],["providers/auth/auth.service",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers/create",{"_index":115,"title":{},"body":{"modules/AddressModule.html":{}}}],["providers/delivery.service",{"_index":370,"title":{},"body":{"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{}}}],["providers/general_settings.service",{"_index":443,"title":{},"body":{"modules/GeneralSettingsModule.html":{}}}],["providers/get",{"_index":118,"title":{},"body":{"modules/AddressModule.html":{}}}],["providers/orders.service",{"_index":508,"title":{},"body":{"modules/OrdersModule.html":{}}}],["providers/patch",{"_index":117,"title":{},"body":{"modules/AddressModule.html":{}}}],["providers/products.service",{"_index":581,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["providers/users.service",{"_index":685,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["providersservice",{"_index":637,"title":{},"body":{"modules/SettingsModule.html":{}}}],["public",{"_index":57,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":247,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["questions",{"_index":887,"title":{},"body":{"index.html":{}}}],["read",{"_index":927,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":81,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":846,"title":{},"body":{"index.html":{}}}],["real",{"_index":902,"title":{},"body":{"index.html":{}}}],["red",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{}}}],["referencedcolumnname",{"_index":567,"title":{},"body":{"entities/Product.html":{}}}],["reflect",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["removes",{"_index":427,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["replace",{"_index":453,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["repository",{"_index":126,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["request",{"_index":420,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{}}}],["required",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{}}}],["requiring",{"_index":869,"title":{},"body":{"index.html":{}}}],["requuest",{"_index":614,"title":{},"body":{"injectables/ProductsService.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":881,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":487,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{}}}],["restrict'})@jointable({name",{"_index":554,"title":{},"body":{"entities/Product.html":{}}}],["results",{"_index":48,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":82,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":62,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CreateAddressProvider.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":831,"title":{},"body":{"index.html":{}}}],["runs",{"_index":854,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":425,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["scalable",{"_index":820,"title":{},"body":{"index.html":{}}}],["seperatly",{"_index":737,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":821,"title":{},"body":{"index.html":{}}}],["service",{"_index":79,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["settings",{"_index":435,"title":{},"body":{"controllers/GeneralSettingsController.html":{},"controllers/SettingsController.html":{},"injectables/UsersService.html":{}}}],["settings.controller",{"_index":442,"title":{},"body":{"modules/GeneralSettingsModule.html":{},"modules/SettingsModule.html":{}}}],["settings.controller.ts",{"_index":433,"title":{},"body":{"controllers/GeneralSettingsController.html":{},"coverage.html":{}}}],["settings.entity.ts",{"_index":431,"title":{},"body":{"entities/GeneralSettings.html":{},"coverage.html":{}}}],["settings/address",{"_index":55,"title":{},"body":{"controllers/AddressController.html":{}}}],["settings/addresses/address.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/deliveries",{"_index":348,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["settings/deliveries/deliveries.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/general",{"_index":430,"title":{},"body":{"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"coverage.html":{}}}],["settings/general_settings.module.ts",{"_index":441,"title":{},"body":{"modules/GeneralSettingsModule.html":{}}}],["settings/providers.service",{"_index":638,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/providers/general_settings.service.ts",{"_index":444,"title":{},"body":{"injectables/GeneralSettingsService.html":{},"coverage.html":{}}}],["settings/settings.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscontroller",{"_index":627,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":169,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["setup",{"_index":828,"title":{},"body":{"index.html":{}}}],["shipped",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":822,"title":{},"body":{"index.html":{}}}],["simple",{"_index":871,"title":{},"body":{"index.html":{}}}],["size",{"_index":248,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["small",{"_index":309,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{},"miscellaneous/enumerations.html":{}}}],["socialpageid",{"_index":249,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sold",{"_index":313,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["solution",{"_index":237,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"modules/DeliveriesModule.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/PatchAddressDto.html":{},"injectables/PatchAddressProvider.html":{},"classes/PatchDeliveryDto.html":{},"classes/PatchUserDto.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":922,"title":{},"body":{"index.html":{}}}],["src/.../defaultaddress.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../orderstatus.enum.ts",{"_index":800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../productsize.ts",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":195,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":701,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth/auth.service",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth/auth.service.ts",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/enums/orderstatus.enum.ts",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/orders/order.entity",{"_index":564,"title":{},"body":{"entities/Product.html":{}}}],["src/orders/order.entity.ts",{"_index":463,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/orders/order.entity.ts:19",{"_index":481,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:22",{"_index":477,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:25",{"_index":484,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:28",{"_index":473,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:35",{"_index":490,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:38",{"_index":482,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:41",{"_index":480,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:46",{"_index":488,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:48",{"_index":476,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:51",{"_index":492,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/order.entity.ts:54",{"_index":479,"title":{},"body":{"entities/Order.html":{}}}],["src/orders/orders.controller.ts",{"_index":500,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.module.ts",{"_index":506,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/providers/orders.service.ts",{"_index":511,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/products/dtos/createpost.dto.ts",{"_index":239,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/products/dtos/createpost.dto.ts:10",{"_index":261,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:12",{"_index":256,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:14",{"_index":259,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:16",{"_index":260,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:18",{"_index":254,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:19",{"_index":258,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:2",{"_index":262,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:21",{"_index":264,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:23",{"_index":257,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:4",{"_index":263,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:6",{"_index":253,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createpost.dto.ts:8",{"_index":252,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/products/dtos/createproduct.dto.ts",{"_index":266,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/createproduct.dto.ts:103",{"_index":305,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:114",{"_index":298,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:126",{"_index":314,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:136",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:23",{"_index":302,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:33",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:44",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:57",{"_index":310,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:68",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:79",{"_index":300,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/createproduct.dto.ts:92",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/products/dtos/getproductparams.dto.ts",{"_index":460,"title":{},"body":{"classes/GetProductParamsDto.html":{},"coverage.html":{}}}],["src/products/dtos/getproductparams.dto.ts:14",{"_index":461,"title":{},"body":{"classes/GetProductParamsDto.html":{}}}],["src/products/enums/productsize.ts",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/products/product.entity",{"_index":497,"title":{},"body":{"entities/Order.html":{}}}],["src/products/product.entity.ts",{"_index":541,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/product.entity.ts:17",{"_index":549,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:24",{"_index":559,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:31",{"_index":545,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:34",{"_index":542,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:42",{"_index":561,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:48",{"_index":548,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:51",{"_index":558,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:54",{"_index":547,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:57",{"_index":560,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:63",{"_index":551,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:66",{"_index":562,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:69",{"_index":550,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:86",{"_index":557,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:88",{"_index":543,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:91",{"_index":563,"title":{},"body":{"entities/Product.html":{}}}],["src/products/product.entity.ts:94",{"_index":544,"title":{},"body":{"entities/Product.html":{}}}],["src/products/products.controller.ts",{"_index":570,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:13",{"_index":579,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:18",{"_index":578,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:23",{"_index":575,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":593,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/providers/products.service.ts",{"_index":597,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/providers/products.service.ts:12",{"_index":605,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:36",{"_index":602,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:41",{"_index":609,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:48",{"_index":604,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:53",{"_index":608,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/products.service.ts:7",{"_index":601,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/settings/addresses/address.controller.ts",{"_index":53,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{}}}],["src/settings/addresses/address.controller.ts:13",{"_index":61,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/settings/addresses/address.controller.ts:17",{"_index":67,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/settings/addresses/address.entity",{"_index":656,"title":{},"body":{"entities/User.html":{}}}],["src/settings/addresses/address.entity.ts",{"_index":6,"title":{},"body":{"entities/Address.html":{},"coverage.html":{}}}],["src/settings/addresses/address.entity.ts:13",{"_index":20,"title":{},"body":{"entities/Address.html":{}}}],["src/settings/addresses/address.entity.ts:20",{"_index":35,"title":{},"body":{"entities/Address.html":{}}}],["src/settings/addresses/address.entity.ts:27",{"_index":28,"title":{},"body":{"entities/Address.html":{}}}],["src/settings/addresses/address.entity.ts:35",{"_index":29,"title":{},"body":{"entities/Address.html":{}}}],["src/settings/addresses/address.entity.ts:41",{"_index":34,"title":{},"body":{"entities/Address.html":{}}}],["src/settings/addresses/address.module.ts",{"_index":108,"title":{},"body":{"modules/AddressModule.html":{}}}],["src/settings/addresses/constants/defaultaddress",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/settings/addresses/constants/defaultaddress.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/settings/addresses/dtos/createaddress.dto",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/settings/addresses/dtos/createaddress.dto.ts",{"_index":212,"title":{},"body":{"classes/CreateAddressDto.html":{},"coverage.html":{}}}],["src/settings/addresses/dtos/createaddress.dto.ts:12",{"_index":216,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["src/settings/addresses/dtos/createaddress.dto.ts:6",{"_index":214,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["src/settings/addresses/dtos/createaddress.dto.ts:9",{"_index":215,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["src/settings/addresses/dtos/getaddressparam.dto.ts",{"_index":445,"title":{},"body":{"classes/GetAddressParamDto.html":{},"coverage.html":{}}}],["src/settings/addresses/dtos/getaddressparam.dto.ts:16",{"_index":448,"title":{},"body":{"classes/GetAddressParamDto.html":{}}}],["src/settings/addresses/dtos/patchaddress.dto.ts",{"_index":512,"title":{},"body":{"classes/PatchAddressDto.html":{},"coverage.html":{}}}],["src/settings/addresses/providers/address.service.ts",{"_index":122,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/settings/addresses/providers/address.service.ts:14",{"_index":128,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/settings/addresses/providers/address.service.ts:34",{"_index":134,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/settings/addresses/providers/address.service.ts:38",{"_index":137,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/settings/addresses/providers/address.service.ts:41",{"_index":132,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/settings/addresses/providers/address.service.ts:45",{"_index":138,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/settings/addresses/providers/create",{"_index":220,"title":{},"body":{"injectables/CreateAddressProvider.html":{},"coverage.html":{}}}],["src/settings/addresses/providers/get",{"_index":449,"title":{},"body":{"injectables/GetAddressProvider.html":{},"coverage.html":{}}}],["src/settings/addresses/providers/patch",{"_index":517,"title":{},"body":{"injectables/PatchAddressProvider.html":{},"coverage.html":{}}}],["src/settings/deliveries/deliveries.controller.ts",{"_index":347,"title":{},"body":{"controllers/DeliveriesController.html":{},"coverage.html":{}}}],["src/settings/deliveries/deliveries.controller.ts:21",{"_index":356,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["src/settings/deliveries/deliveries.controller.ts:26",{"_index":360,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["src/settings/deliveries/deliveries.controller.ts:31",{"_index":363,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["src/settings/deliveries/deliveries.controller.ts:36",{"_index":366,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["src/settings/deliveries/deliveries.controller.ts:40",{"_index":359,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["src/settings/deliveries/deliveries.module.ts",{"_index":386,"title":{},"body":{"modules/DeliveriesModule.html":{}}}],["src/settings/deliveries/delivery.entity",{"_index":657,"title":{},"body":{"entities/User.html":{}}}],["src/settings/deliveries/delivery.entity.ts",{"_index":391,"title":{},"body":{"entities/Delivery.html":{},"coverage.html":{}}}],["src/settings/deliveries/delivery.entity.ts:10",{"_index":396,"title":{},"body":{"entities/Delivery.html":{}}}],["src/settings/deliveries/delivery.entity.ts:13",{"_index":393,"title":{},"body":{"entities/Delivery.html":{}}}],["src/settings/deliveries/delivery.entity.ts:16",{"_index":394,"title":{},"body":{"entities/Delivery.html":{}}}],["src/settings/deliveries/delivery.entity.ts:19",{"_index":399,"title":{},"body":{"entities/Delivery.html":{}}}],["src/settings/deliveries/delivery.entity.ts:7",{"_index":395,"title":{},"body":{"entities/Delivery.html":{}}}],["src/settings/deliveries/dtos/createdeliveries.dto.ts",{"_index":226,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"coverage.html":{}}}],["src/settings/deliveries/dtos/createdeliveries.dto.ts:12",{"_index":231,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["src/settings/deliveries/dtos/createdeliveries.dto.ts:16",{"_index":234,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["src/settings/deliveries/dtos/createdeliveries.dto.ts:6",{"_index":232,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["src/settings/deliveries/dtos/createdeliveries.dto.ts:9",{"_index":230,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["src/settings/deliveries/dtos/patchdeliveries.dto.ts",{"_index":532,"title":{},"body":{"classes/PatchDeliveryDto.html":{},"coverage.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts",{"_index":401,"title":{},"body":{"injectables/DeliveryService.html":{},"coverage.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts:17",{"_index":405,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts:30",{"_index":408,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts:38",{"_index":407,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts:43",{"_index":409,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts:49",{"_index":406,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/settings/deliveries/providers/delivery.service.ts:9",{"_index":403,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/settings/general",{"_index":429,"title":{},"body":{"entities/GeneralSettings.html":{},"controllers/GeneralSettingsController.html":{},"modules/GeneralSettingsModule.html":{},"injectables/GeneralSettingsService.html":{},"coverage.html":{}}}],["src/settings/settings.controller.ts",{"_index":628,"title":{},"body":{"controllers/SettingsController.html":{},"coverage.html":{}}}],["src/settings/settings.module.ts",{"_index":635,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/users/dtos/createuser.dto.ts",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/createuser.dto.ts:16",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:22",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:26",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:30",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:34",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/patchuser.dto.ts",{"_index":536,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":141,"title":{},"body":{"injectables/AddressService.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:11",{"_index":710,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:21",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:28",{"_index":711,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:53",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:60",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/user.entity",{"_index":37,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{}}}],["src/users/user.entity.ts",{"_index":639,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:18",{"_index":653,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:25",{"_index":651,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:31",{"_index":654,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:38",{"_index":650,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:46",{"_index":652,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:52",{"_index":643,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:55",{"_index":648,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:58",{"_index":644,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:61",{"_index":655,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:64",{"_index":645,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:33",{"_index":677,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":671,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":679,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":673,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":112,"title":{},"body":{"modules/AddressModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/ProductsModule.html":{}}}],["src/users/users.module.ts",{"_index":700,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":833,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":836,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":838,"title":{},"body":{"index.html":{}}}],["started",{"_index":814,"title":{"index.html":{}},"body":{}}],["starter",{"_index":826,"title":{},"body":{"index.html":{}}}],["statements",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":454,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["status",{"_index":470,"title":{},"body":{"entities/Order.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":908,"title":{},"body":{"index.html":{}}}],["steps",{"_index":851,"title":{},"body":{"index.html":{}}}],["stock",{"_index":297,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["straightforward",{"_index":867,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{}}}],["string'})@isstring()@isoptional",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["summary",{"_index":688,"title":{},"body":{"controllers/UsersController.html":{}}}],["support",{"_index":888,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":939,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":621,"title":{},"body":{"injectables/ProductsService.html":{}}}],["tags",{"_index":620,"title":{},"body":{"injectables/ProductsService.html":{}}}],["take",{"_index":852,"title":{},"body":{"index.html":{}}}],["temporary",{"_index":236,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["test",{"_index":841,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":844,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":843,"title":{},"body":{"index.html":{}}}],["tests",{"_index":839,"title":{},"body":{"index.html":{}}}],["text",{"_index":472,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{}}}],["thanks",{"_index":921,"title":{},"body":{"index.html":{}}}],["this.addressrepository.findoneby",{"_index":457,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["this.addressrepository.findoneby(getaddressparamdto",{"_index":148,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.findonebyid(user.address.id",{"_index":523,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["this.addressrepository.save(address",{"_index":530,"title":{},"body":{"injectables/PatchAddressProvider.html":{}}}],["this.addressrepository.save(createaddressdto",{"_index":224,"title":{},"body":{"injectables/CreateAddressProvider.html":{}}}],["this.addressservice.getaddressbyid(getaddressparamdto",{"_index":88,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.getaddressbyuserid",{"_index":83,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.updateaddress(patchaddressdto",{"_index":85,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.appservice.gethello",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["this.createaddressprovider.createaddress(createaddressdto",{"_index":151,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.deliveriesservice.createdelivery(createdeliverydto",{"_index":375,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["this.deliveriesservice.deletedelivery(id",{"_index":382,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["this.deliveriesservice.findallbyuserid",{"_index":376,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["this.deliveriesservice.findonebyid(id",{"_index":378,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["this.deliveriesservice.updatedelivery(id",{"_index":380,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["this.deliveryrepository.create",{"_index":418,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliveryrepository.findone",{"_index":421,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.deliveryrepository.save(delivery",{"_index":419,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.getaddressprovider.getaddressbyuserid",{"_index":149,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.patchaddressprovider.updateaddress(patchaddressdto",{"_index":152,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":589,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":585,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproductbyid(getproductparamsdto",{"_index":587,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.userrepository.create(createuserdto",{"_index":733,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(id",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findoneby",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":735,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(id",{"_index":746,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.delete(id",{"_index":696,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyid(1",{"_index":615,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.usersservice.finduserbyid(12",{"_index":456,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["this.usersservice.finduserbyid(13",{"_index":416,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/PatchAddressProvider.html":{}}}],["this.usersservice.finduserbyid(id",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.udpateuser(patchuserdto",{"_index":694,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{}}}],["time",{"_index":903,"title":{},"body":{"index.html":{}}}],["title",{"_index":250,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{}}}],["todo",{"_index":452,"title":{},"body":{"injectables/GetAddressProvider.html":{},"injectables/ProductsService.html":{}}}],["token",{"_index":522,"title":{},"body":{"injectables/PatchAddressProvider.html":{},"dependencies.html":{}}}],["total",{"_index":311,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["totalproductssold",{"_index":251,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"entities/Product.html":{}}}],["touch",{"_index":929,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAddressParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProductDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":935,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"classes/CreateAddressDto.html":{},"injectables/CreateAddressProvider.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveriesController.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"classes/GetAddressParamDto.html":{},"injectables/GetAddressProvider.html":{},"classes/GetProductParamsDto.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":41,"title":{},"body":{"entities/Address.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"entities/GeneralSettings.html":{},"injectables/GetAddressProvider.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"entities/Product.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":110,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/DeliveriesModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([address",{"_index":119,"title":{},"body":{"modules/AddressModule.html":{}}}],["typeormmodule.forfeature([delivery",{"_index":390,"title":{},"body":{"modules/DeliveriesModule.html":{}}}],["typeormmodule.forfeature([order",{"_index":510,"title":{},"body":{"modules/OrdersModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":596,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":704,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":539,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["types/passport",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":825,"title":{},"body":{"index.html":{}}}],["udpateuser",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{}}}],["udpateuser(@body",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{}}}],["udpateuser(patchuserdto",{"_index":716,"title":{},"body":{"injectables/UsersService.html":{}}}],["undefined",{"_index":308,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/Order.html":{},"entities/Product.html":{},"injectables/ProductsService.html":{}}}],["unique",{"_index":649,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":840,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":63,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/CreateAddressProvider.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":947,"title":{},"body":{"properties.html":{}}}],["update",{"_index":625,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateaddress",{"_index":60,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/PatchAddressProvider.html":{}}}],["updateaddress(@body",{"_index":84,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/PatchAddressProvider.html":{}}}],["updateaddress(patchaddressdto",{"_index":64,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/PatchAddressProvider.html":{}}}],["updated",{"_index":745,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":471,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{}}}],["updatedate",{"_index":641,"title":{},"body":{"entities/User.html":{}}}],["updatedatecolumn",{"_index":491,"title":{},"body":{"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["updatedelivery",{"_index":353,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["updatedelivery(@param('id",{"_index":379,"title":{},"body":{"controllers/DeliveriesController.html":{}}}],["updatedelivery(id",{"_index":364,"title":{},"body":{"controllers/DeliveriesController.html":{},"injectables/DeliveryService.html":{}}}],["updateproduct",{"_index":600,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updates",{"_index":426,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["url",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["use",{"_index":136,"title":{},"body":{"injectables/AddressService.html":{}}}],["usefactory",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":12,"title":{"entities/User.html":{}},"body":{"entities/Address.html":{},"injectables/AddressService.html":{},"entities/Delivery.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"entities/Order.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user'})@apibody({type",{"_index":667,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.address",{"_index":31,"title":{},"body":{"entities/Address.html":{}}}],["user.address.id",{"_index":458,"title":{},"body":{"injectables/GetAddressProvider.html":{}}}],["user.deliveries",{"_index":398,"title":{},"body":{"entities/Delivery.html":{}}}],["user.entity",{"_index":702,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["userexists",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":229,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["username",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":709,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":703,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":495,"title":{},"body":{"entities/Order.html":{}}}],["users/users.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":658,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":101,"title":{"modules/UsersModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":127,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/DeliveryService.html":{},"injectables/GetAddressProvider.html":{},"injectables/PatchAddressProvider.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":521,"title":{},"body":{"injectables/PatchAddressProvider.html":{},"index.html":{}}}],["validator",{"_index":219,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/GetAddressParamDto.html":{},"classes/GetProductParamsDto.html":{},"dependencies.html":{}}}],["value",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":23,"title":{},"body":{"entities/Address.html":{},"entities/Delivery.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["variable",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":948,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":945,"title":{},"body":{"properties.html":{}}}],["video",{"_index":896,"title":{},"body":{"index.html":{}}}],["visit",{"_index":885,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":899,"title":{},"body":{"index.html":{}}}],["void",{"_index":603,"title":{},"body":{"injectables/ProductsService.html":{}}}],["watch",{"_index":834,"title":{},"body":{"index.html":{}}}],["website",{"_index":933,"title":{},"body":{"index.html":{}}}],["wilaya",{"_index":13,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":884,"title":{},"body":{"index.html":{}}}],["world",{"_index":197,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":911,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":925,"title":{},"body":{"index.html":{}}}],["you're",{"_index":845,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DeliveriesModule.html":{},"modules/GeneralSettingsModule.html":{},"modules/OrdersModule.html":{},"modules/ProductsModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Address.html":{"url":"entities/Address.html","title":"entity - Address","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                municipality\n                            \n                            \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                wilaya\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/address.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        municipality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/address.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.address, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/address.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        wilaya\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/address.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from 'src/users/user.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Address {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  wilaya: string;\n\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  municipality: string;\n\n  //1000 , 48000 , 58000\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  postalCode: string;\n\n  @OneToOne(() => User, (user) => user.address, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressController.html":{"url":"controllers/AddressController.html","title":"controller - AddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/address\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                getAddressByUserId\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        getAddressByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressByUserId()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/settings/addresses/address.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAddress(patchAddressDto: PatchAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/settings/addresses/address.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchAddressDto\n                                            \n                                                            PatchAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch } from '@nestjs/common';\nimport { PatchAddressDto } from './dtos/patchAddress.dto';\nimport { AddressService } from './providers/address.service';\n\n@Controller('settings/address')\nexport class AddressController {\n  constructor(\n    /**inject address service */\n    private readonly addressService: AddressService,\n  ) {}\n\n  @Get()\n  public async getAddressByUserId() {\n    return this.addressService.getAddressByUserId();\n  }\n  @Patch()\n  public async updateAddress(@Body() patchAddressDto: PatchAddressDto) {\n    return this.addressService.updateAddress(patchAddressDto);\n  }\n  // public async getAddressById(@Param() getAddressParamDto: GetAddressParamDto) {\n  //   return this.addressService.getAddressById(getAddressParamDto);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressModule.html":{"url":"modules/AddressModule.html","title":"module - AddressModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AddressModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAddressModule\n\nAddressModule\n\nAddressModule -->\n\nUsersModule->AddressModule\n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nCreateAddressProvider\n\nCreateAddressProvider\n\nAddressModule -->\n\nCreateAddressProvider->AddressModule\n\n\n\n\n\nGetAddressProvider\n\nGetAddressProvider\n\nAddressModule -->\n\nGetAddressProvider->AddressModule\n\n\n\n\n\nPatchAddressProvider\n\nPatchAddressProvider\n\nAddressModule -->\n\nPatchAddressProvider->AddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/addresses/address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressService\n                        \n                        \n                            CreateAddressProvider\n                        \n                        \n                            GetAddressProvider\n                        \n                        \n                            PatchAddressProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from 'src/users/users.module';\nimport { AddressController } from './address.controller';\nimport { Address } from './address.entity';\nimport { AddressService } from './providers/address.service';\nimport { CreateAddressProvider } from './providers/create-address.provider';\nimport { PatchAddressProvider } from './providers/patch-address.provider';\nimport { GetAddressProvider } from './providers/get-address.provider';\n\n@Module({\n  controllers: [AddressController],\n  providers: [AddressService, CreateAddressProvider, PatchAddressProvider, GetAddressProvider],\n  imports: [TypeOrmModule.forFeature([Address]), UsersModule],\n})\nexport class AddressModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/providers/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAddress\n                            \n                            \n                                    Public\n                                    Async\n                                getAddressById\n                            \n                            \n                                    Public\n                                    Async\n                                getAddressByUserId\n                            \n                            \n                                    Public\n                                    Async\n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressRepository: Repository, usersService: UsersService, createAddressProvider: CreateAddressProvider, patchAddressProvider: PatchAddressProvider, getAddressProvider: GetAddressProvider)\n                    \n                \n                        \n                            \n                                Defined in src/settings/addresses/providers/address.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createAddressProvider\n                                                  \n                                                        \n                                                                        CreateAddressProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patchAddressProvider\n                                                  \n                                                        \n                                                                        PatchAddressProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAddressProvider\n                                                  \n                                                        \n                                                                        GetAddressProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAddress(createAddressDto: CreateAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/address.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAddressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAddressById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressById(getAddressParamDto: GetAddressParamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/address.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Get address by id\nno need to use it on the controller since we get the address by user id only\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getAddressParamDto\n                                            \n                                                            GetAddressParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                address\nno need to use it on the controller since we get the address by user id only\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAddressByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressByUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/address.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAddress(patchAddressDto: PatchAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/address.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchAddressDto\n                                            \n                                                            PatchAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable, Param } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Repository } from 'typeorm';\nimport { Address } from '../address.entity';\nimport { CreateAddressDto } from '../dtos/createAddress.dto';\nimport { GetAddressParamDto } from '../dtos/getAddressParam.dto';\nimport { PatchAddressDto } from '../dtos/patchAddress.dto';\nimport { CreateAddressProvider } from './create-address.provider';\nimport { GetAddressProvider } from './get-address.provider';\nimport { PatchAddressProvider } from './patch-address.provider';\n\n@Injectable()\nexport class AddressService {\n  constructor(\n    /**inject address repository */\n    @InjectRepository(Address)\n    private readonly addressRepository: Repository,\n    /**inject user service */\n    private readonly usersService: UsersService,\n    /**inject create address Provider  */\n    private readonly createAddressProvider: CreateAddressProvider,\n    /**inject patch address Provider*/\n    private readonly patchAddressProvider: PatchAddressProvider,\n    /**inject get address Provider by user id  */\n    private readonly getAddressProvider: GetAddressProvider,\n  ) {}\n  /**\n   * Get address by id\n   * @param getAddressParamDto\n   * @returns address\n   * no need to use it on the controller since we get the address by user id only\n   */\n  public async getAddressById(@Param() getAddressParamDto: GetAddressParamDto) {\n    return await this.addressRepository.findOneBy(getAddressParamDto);\n  }\n\n  public async getAddressByUserId() {\n    return this.getAddressProvider.getAddressByUserId();\n  }\n  public async createAddress(@Body() createAddressDto: CreateAddressDto) {\n    return this.createAddressProvider.createAddress(createAddressDto);\n  }\n\n  public async updateAddress(@Body() patchAddressDto: PatchAddressDto) {\n    return this.patchAddressProvider.updateAddress(patchAddressDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDeliveriesModule\n\nDeliveriesModule\n\nAppModule -->\n\nDeliveriesModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DeliveriesModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { AddressModule } from './settings/addresses/address.module';\nimport { DeliveriesModule } from './settings/deliveries/deliveries.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { ProductsModule } from './products/products.module';\nimport { SettingsModule } from './settings/settings.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    AuthModule,\n    ProductsModule,\n    TypeOrmModule.forRootAsync({\n      useFactory: () => {\n        return {\n          type: 'postgres',\n          autoLoadEntities: true,\n          synchronize: true,\n          port: 5432,\n          username: 'postgres',\n          password: 'FERHATSAKI',\n          host: 'localhost',\n          database: 'akkadli',\n        };\n      },\n    }),\n    OrdersModule,\n    SettingsModule,\n    DeliveriesModule,\n    AddressModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDto.html":{"url":"classes/CreateAddressDto.html","title":"class - CreateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/dtos/createAddress.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                municipality\n                            \n                            \n                                    \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                    \n                                wilaya\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        municipality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/dtos/createAddress.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/dtos/createAddress.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        wilaya\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/dtos/createAddress.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateAddressDto {\n  @IsString()\n  @IsNotEmpty()\n  municipality: string;\n  @IsString()\n  @IsNotEmpty()\n  postalCode: string;\n  @IsString()\n  @IsNotEmpty()\n  wilaya: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateAddressProvider.html":{"url":"injectables/CreateAddressProvider.html","title":"injectable - CreateAddressProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateAddressProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/providers/create-address.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/settings/addresses/providers/create-address.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAddress(createAddressDto: CreateAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/create-address.provider.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAddressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Address } from '../address.entity';\nimport { CreateAddressDto } from '../dtos/createAddress.dto';\n\n@Injectable()\nexport class CreateAddressProvider {\n  constructor(\n    /**inject address repository */\n    @InjectRepository(Address)\n    private readonly addressRepository: Repository,\n  ) {}\n  public async createAddress(@Body() createAddressDto: CreateAddressDto) {\n    return await this.addressRepository.save(createAddressDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryDto.html":{"url":"classes/CreateDeliveryDto.html","title":"class - CreateDeliveryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/deliveries/dtos/createDeliveries.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiId\n                            \n                            \n                                    \n                                    \n                                apiToken\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/dtos/createDeliveries.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/dtos/createDeliveries.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/dtos/createDeliveries.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/dtos/createDeliveries.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeliveryDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n  @IsString()\n  @IsNotEmpty()\n  apiId: string;\n  @IsString()\n  @IsNotEmpty()\n  apiToken: string;\n  //temporary solution\n  @IsInt()\n  @IsNotEmpty()\n  userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createPost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                discount\n                            \n                            \n                                heavyWeight\n                            \n                            \n                                    Optional\n                                imageUrl\n                            \n                            \n                                inStock\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                quantity\n                            \n                            \n                                    Optional\n                                size\n                            \n                            \n                                    Optional\n                                socialPageId\n                            \n                            \n                                title\n                            \n                            \n                                totalProductsSold\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heavyWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inStock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialPageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalProductsSold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createPost.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePostDto {\n  socialPageId?: number;\n\n  title: string;\n\n  description?: string;\n\n  color?: string;\n\n  size?: string;\n\n  heavyWeight: boolean;\n\n  price: number;\n\n  quantity?: number;\n\n  discount?: number;\n  inStock: boolean;\n\n  totalProductsSold: number;\n\n  imageUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/createProduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                heavyWeight\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                inStock\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                productName\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                totalProductsSold\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({title: 'color', description: 'color of the product', example: 'red', required: false, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({title: 'description', description: 'description of the product', example: 'product 1 description', required: false, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@ApiPropertyOptional({title: 'discount', description: 'discount of the product(0 is the default value, 100 is the max value)', default: 0, example: 10, required: false, type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        heavyWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiPropertyOptional({title: 'heavyWeight', description: 'is the product heavy ?(more then 5kg)', example: true, required: false, type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({title: 'imageUrl', description: 'image url of the product', example: 'https://example.com/image.jpg', required: false, type: 'string'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inStock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsNotEmpty()@ApiPropertyOptional({title: 'inStock', description: 'is the product in stock', example: true, required: true, type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@ApiProperty({title: 'price', description: 'price of the product', example: 100, required: true, type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(255)@ApiProperty({title: 'productName', description: 'name of the product', example: 'product 1', required: true, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'quantity', description: 'quantity of the product', example: 10, required: true, type: 'number'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({title: 'size', enum: ProductSize, default: undefined, description: 'size of the product', example: 'small', required: false, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        totalProductsSold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'totalProductsSold', description: 'total products sold', example: 10, default: 0, required: true, type: 'number'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/createProduct.dto.ts:126\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport { ProductSize } from '../enums/productSize';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(255)\n  @ApiProperty({\n    title: 'productName',\n    description: 'name of the product',\n    example: 'product 1',\n    required: true,\n    type: 'string',\n  })\n  productName: string;\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    title: 'description',\n    description: 'description of the product',\n    example: 'product 1 description',\n    required: false,\n    type: 'string',\n  })\n  description?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    title: 'color',\n    description: 'color of the product',\n    example: 'red',\n    required: false,\n    type: 'string',\n  })\n  color?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    title: 'size',\n    enum: ProductSize,\n    default: ProductSize.SMALL,\n    description: 'size of the product',\n    example: 'small',\n    required: false,\n    type: 'string',\n  })\n  size?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiPropertyOptional({\n    title: 'heavyWeight',\n    description: 'is the product heavy ?(more then 5kg)',\n    example: true,\n    required: false,\n    type: 'boolean',\n  })\n  heavyWeight?: boolean;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @ApiProperty({\n    title: 'price',\n    description: 'price of the product',\n    example: 100,\n    required: true,\n    type: 'number',\n  })\n  price: number;\n\n  @IsOptional()\n  @IsNumber()\n  @ApiPropertyOptional({\n    title: 'discount',\n    description:\n      'discount of the product(0 is the default value, 100 is the max value)',\n    default: 0,\n    example: 10,\n    required: false,\n    type: 'number',\n  })\n  discount?: number;\n\n  @ApiProperty({\n    title: 'quantity',\n    description: 'quantity of the product',\n    example: 10,\n    required: true,\n    type: 'number',\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  quantity: number;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  @ApiPropertyOptional({\n    title: 'inStock',\n    description: 'is the product in stock',\n    example: true,\n    required: true,\n    type: 'boolean',\n  })\n  inStock: boolean;\n\n  @ApiProperty({\n    title: 'totalProductsSold',\n    description: 'total products sold',\n    example: 10,\n    default: 0,\n    required: true,\n    type: 'number',\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  totalProductsSold: number;\n  @ApiPropertyOptional({\n    title: 'imageUrl',\n    description: 'image url of the product',\n    example: 'https://example.com/image.jpg',\n    required: false,\n    type: 'string',\n  })\n  @IsString()\n  @IsOptional()\n  imageUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                googleId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateAddressDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(128)@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(128)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { CreateAddressDto } from 'src/settings/addresses/dtos/createAddress.dto';\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(128)\n  @MinLength(3)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(128)\n  lastName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  googleId: string;\n\n  @IsOptional()\n  @Type(() => CreateAddressDto)\n  address?: CreateAddressDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveriesController.html":{"url":"controllers/DeliveriesController.html","title":"controller - DeliveriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/deliveries/deliveries.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/deliveries\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createDelivery\n                            \n                            \n                                    \n                                    Public\n                                deleteDelivery\n                            \n                            \n                                    \n                                    Public\n                                findAllByUserId\n                            \n                            \n                                    \n                                    Public\n                                findOneById\n                            \n                            \n                                    \n                                    Public\n                                updateDelivery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createDelivery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDelivery(createDeliveryDto: CreateDeliveryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/settings/deliveries/deliveries.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryDto\n                                            \n                                                            CreateDeliveryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteDelivery\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDelivery(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/settings/deliveries/deliveries.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUserId()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/settings/deliveries/deliveries.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/settings/deliveries/deliveries.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updateDelivery\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDelivery(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/settings/deliveries/deliveries.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { CreateDeliveryDto } from './dtos/createDeliveries.dto';\nimport { DeliveryService } from './providers/delivery.service';\n\n@Controller('settings/deliveries')\nexport class DeliveriesController {\n  constructor(\n    /**inject deliveries service */\n    private readonly deliveriesService: DeliveryService,\n  ) {}\n\n  @Post()\n  public createDelivery(@Body() createDeliveryDto: CreateDeliveryDto) {\n    return this.deliveriesService.createDelivery(createDeliveryDto);\n  }\n\n  @Get()\n  public findAllByUserId() {\n    return this.deliveriesService.findAllByUserId();\n  }\n\n  @Get('/:id')\n  public findOneById(@Param('id') id: number) {\n    return this.deliveriesService.findOneById(id);\n  }\n\n  @Patch('/:id')\n  public updateDelivery(@Param('id') id: number) {\n    return this.deliveriesService.updateDelivery(id);\n  }\n  @Delete('/:id')\n  public deleteDelivery(@Param('id') id: number) {\n    return this.deliveriesService.deleteDelivery(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveriesModule.html":{"url":"modules/DeliveriesModule.html","title":"module - DeliveriesModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveriesModule\n\n\n\ncluster_DeliveriesModule_providers\n\n\n\ncluster_DeliveriesModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nDeliveriesModule\n\nDeliveriesModule\n\nDeliveriesModule -->\n\nUsersModule->DeliveriesModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveriesModule -->\n\nDeliveryService->DeliveriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/deliveries/deliveries.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveriesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from 'src/users/users.module';\nimport { DeliveriesController } from './deliveries.controller';\nimport { Delivery } from './delivery.entity';\nimport { DeliveryService } from './providers/delivery.service';\n\n@Module({\n  controllers: [DeliveriesController],\n  providers: [DeliveryService],\n  imports: [TypeOrmModule.forFeature([Delivery]), UsersModule],\n})\nexport class DeliveriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Delivery.html":{"url":"entities/Delivery.html","title":"entity - Delivery","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Delivery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/deliveries/delivery.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiId\n                            \n                            \n                                    \n                                apiToken\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/delivery.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/delivery.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/delivery.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/delivery.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.deliveries)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/deliveries/delivery.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from 'src/users/user.entity';\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Delivery {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 100 })\n  name: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  apiId: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  apiToken: string;\n\n  @ManyToOne(() => User, (user) => user.deliveries)\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryService.html":{"url":"injectables/DeliveryService.html","title":"injectable - DeliveryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/deliveries/providers/delivery.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createDelivery\n                            \n                            \n                                    Public\n                                    Async\n                                deleteDelivery\n                            \n                            \n                                    Public\n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                updateDelivery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deliveryRepository: Repository, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/settings/deliveries/providers/delivery.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deliveryRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDelivery\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDelivery(createDeliveryDto: CreateDeliveryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/deliveries/providers/delivery.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryDto\n                                            \n                                                            CreateDeliveryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteDelivery\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDelivery(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/deliveries/providers/delivery.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/deliveries/providers/delivery.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/deliveries/providers/delivery.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateDelivery\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDelivery(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/deliveries/providers/delivery.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Repository } from 'typeorm';\nimport { Delivery } from '../delivery.entity';\nimport { CreateDeliveryDto } from '../dtos/createDeliveries.dto';\n\n@Injectable()\nexport class DeliveryService {\n  constructor(\n    /**inject delivery repository */\n    @InjectRepository(Delivery)\n    private readonly deliveryRepository: Repository,\n    /**inject user service */\n    private readonly usersService: UsersService,\n  ) {}\n  public async createDelivery(@Body() createDeliveryDto: CreateDeliveryDto) {\n    //get user  based on user id from body , later will change to getit from auth\n    const user = await this.usersService.findUserById(13);\n    console.log(user);\n    //create delivery\n    const delivery = this.deliveryRepository.create({\n      ...createDeliveryDto,\n      user: user,\n    });\n    //return the delivery\n    return await this.deliveryRepository.save(delivery);\n  }\n\n  public async findOneById(id: number) {\n    //get user id from request\n    const user = await this.usersService.findUserById(13);\n    //get delivery  by id\n    return await this.deliveryRepository.findOne({\n      where: { id: id },\n    });\n  }\n  public async findAllByUserId() {\n    //get user id from request\n    //get all deliveries by user id\n    return `This action returns all deliveries of a user`;\n  }\n  public async updateDelivery(id: number) {\n    //get user id from request\n    //get delivery  by id\n    // apply changes and save\n    return `This action updates a delivery ${id}`;\n  }\n  public async deleteDelivery(id: number) {\n    //get user id from request\n    //delete delivery  by id\n    return `This action removes a delivery ${id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GeneralSettings.html":{"url":"entities/GeneralSettings.html","title":"entity - GeneralSettings","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GeneralSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/general-settings/general-settings.entity.ts\n        \n\n\n\n\n\n    \n\n\n    \n        import { Entity } from 'typeorm';\n\n@Entity()\nexport class GeneralSettings {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneralSettingsController.html":{"url":"controllers/GeneralSettingsController.html","title":"controller - GeneralSettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneralSettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/general-settings/general-settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                general-settings\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('general-settings')\nexport class GeneralSettingsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneralSettingsModule.html":{"url":"modules/GeneralSettingsModule.html","title":"module - GeneralSettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneralSettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneralSettingsModule\n\n\n\ncluster_GeneralSettingsModule_providers\n\n\n\n\nGeneralSettingsService\n\nGeneralSettingsService\n\n\n\nGeneralSettingsModule\n\nGeneralSettingsModule\n\nGeneralSettingsModule -->\n\nGeneralSettingsService->GeneralSettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/general-settings/general_settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneralSettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneralSettingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneralSettingsController } from './general-settings.controller';\nimport { GeneralSettingsService } from './providers/general_settings.service';\n\n@Module({\n  controllers: [GeneralSettingsController],\n  providers: [GeneralSettingsService],\n})\nexport class GeneralSettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneralSettingsService.html":{"url":"injectables/GeneralSettingsService.html","title":"injectable - GeneralSettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneralSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/general-settings/providers/general_settings.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GeneralSettingsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAddressParamDto.html":{"url":"classes/GetAddressParamDto.html","title":"class - GetAddressParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAddressParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/dtos/getAddressParam.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@ApiProperty({title: 'id', description: 'id of the address', example: 1, required: true, type: 'number'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/addresses/dtos/getAddressParam.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class GetAddressParamDto {\n  @IsInt()\n  @IsNotEmpty()\n  @ApiProperty({\n    title: 'id',\n    description: 'id of the address',\n    example: 1,\n    required: true,\n    type: 'number',\n  })\n  @Type(() => Number)\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetAddressProvider.html":{"url":"injectables/GetAddressProvider.html","title":"injectable - GetAddressProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetAddressProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/providers/get-address.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getAddressByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/settings/addresses/providers/get-address.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAddressByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressByUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/get-address.provider.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Repository } from 'typeorm';\nimport { Address } from '../address.entity';\n\n@Injectable()\nexport class GetAddressProvider {\n  constructor(\n    /**inject user service */\n    private readonly usersService: UsersService,\n    /**inject address repository */\n    @InjectRepository(Address)\n    private readonly addressRepository: Repository,\n  ) {}\n  public async getAddressByUserId() {\n    //TODO replace the static user id with the id from the request after authentication\n    const user = await this.usersService.findUserById(12);\n    return await this.addressRepository.findOneBy({ id: user.address.id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductParamsDto.html":{"url":"classes/GetProductParamsDto.html","title":"class - GetProductParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/getProductParams.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@ApiProperty({title: 'id', description: 'id of the product', example: 1, required: true, type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/getProductParams.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class GetProductParamsDto {\n  @IsInt()\n  @IsNotEmpty()\n  @ApiProperty({\n    title: 'id',\n    description: 'id of the product',\n    example: 1,\n    required: true,\n    type: 'number',\n  })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                customerName\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                externalTrackingId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isExternal\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                products\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        externalTrackingId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isExternal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, product => product.orders, {onDelete: 'RESTRICT'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: OrderStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/order.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  ManyToOne,\n  OneToMany,\n  ManyToMany,\n} from 'typeorm';\nimport { User } from '../users/user.entity';\nimport { OrderStatus } from './enums/orderStatus.enum';\nimport { Product } from 'src/products/product.entity';\n\n@Entity()\nexport class Order {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  customerName: string;\n\n  @Column({ type: 'varchar', length: 20 })\n  phoneNumber: string;\n\n  @Column({ type: 'text' })\n  address: string;\n\n  @Column({\n    type: 'enum',\n    enum: OrderStatus,\n    default: OrderStatus.PENDING,\n  })\n  status: string;\n\n  @Column({ type: 'boolean', default: false })\n  isExternal: boolean;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  externalTrackingId?: string;\n\n  @ManyToMany(() => Product, (product) => product.orders, {\n    onDelete: 'RESTRICT',\n  })\n  products: Product[];\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('orders')\nexport class OrdersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './providers/orders.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Order } from './order.entity';\n\n@Module({\n  controllers: [OrdersController],\n  providers: [OrdersService],\n  imports: [TypeOrmModule.forFeature([Order])],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/providers/orders.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OrdersService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchAddressDto.html":{"url":"classes/PatchAddressDto.html","title":"class - PatchAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/dtos/patchAddress.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAddressDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAddressDto } from './createAddress.dto';\n\nexport class PatchAddressDto extends PartialType(CreateAddressDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatchAddressProvider.html":{"url":"injectables/PatchAddressProvider.html","title":"injectable - PatchAddressProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PatchAddressProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/addresses/providers/patch-address.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/settings/addresses/providers/patch-address.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAddress(patchAddressDto: PatchAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/addresses/providers/patch-address.provider.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchAddressDto\n                                            \n                                                            PatchAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { Repository } from 'typeorm';\nimport { Address } from '../address.entity';\nimport { PatchAddressDto } from '../dtos/patchAddress.dto';\n\n@Injectable()\nexport class PatchAddressProvider {\n  constructor(\n    /**inject user service */\n    private readonly usersService: UsersService,\n    /**inject address repository */\n    @InjectRepository(Address)\n    private readonly addressRepository: Repository,\n  ) {}\n  public async updateAddress(@Body() patchAddressDto: PatchAddressDto) {\n    //find the user using the user service and id from the auth token\n    const user = await this.usersService.findUserById(13);\n    console.log(user);\n    //find the address using the user\n    const address = await this.addressRepository.findOneById(user.address.id);\n    address.wilaya = patchAddressDto.wilaya || address.wilaya;\n    address.municipality = patchAddressDto.municipality || address.municipality;\n    address.postalCode = patchAddressDto.postalCode || address.postalCode;\n\n    return await this.addressRepository.save(address);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchDeliveryDto.html":{"url":"classes/PatchDeliveryDto.html","title":"class - PatchDeliveryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchDeliveryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/deliveries/dtos/patchDeliveries.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeliveryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeliveryDto } from './createDeliveries.dto';\n\nexport class PatchDeliveryDto extends PartialType(CreateDeliveryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patchUser.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './createUser.dto';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                color\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    Optional\n                                discount\n                            \n                            \n                                    \n                                    Optional\n                                heavyWeight\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                inStock\n                            \n                            \n                                    \n                                    \n                                orders\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productName\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    Optional\n                                size\n                            \n                            \n                                    \n                                totalProductsSold\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, name: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'float', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        heavyWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inStock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, order => order.products, {eager: true, onDelete: 'RESTRICT'})@JoinTable({name: 'order_products', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'float', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'float', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ProductSize, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalProductsSold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'float', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/product.entity.ts:91\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Order } from 'src/orders/order.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProductSize } from './enums/productSize';\n\n@Entity()\nexport class Product {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n  })\n  productName: string;\n\n  @Column({\n    type: 'text',\n    nullable: true,\n    name: 'description',\n  })\n  description?: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  color?: string;\n\n  @Column({\n    type: 'enum',\n    enum: ProductSize,\n    default: ProductSize.SMALL,\n    nullable: true,\n  })\n  size?: string;\n\n  @Column({\n    type: 'boolean',\n    nullable: true,\n  })\n  heavyWeight?: boolean;\n\n  @Column({ type: 'float', nullable: false })\n  price: number;\n\n  @Column({ type: 'float', nullable: true })\n  discount?: number;\n\n  @Column({ type: 'float', nullable: false })\n  quantity: number;\n\n  @Column({\n    type: 'boolean',\n    nullable: false,\n  })\n  inStock: boolean;\n\n  @Column({ type: 'float', nullable: false })\n  totalProductsSold: number;\n\n  @Column({ type: 'text', nullable: true })\n  imageUrl?: string;\n\n  @ManyToMany(() => Order, (order) => order.products, {\n    eager: true,\n    onDelete: 'RESTRICT',\n  })\n  @JoinTable({\n    name: 'order_products',\n    joinColumn: {\n      name: 'product_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'order_id',\n      referencedColumnName: 'id',\n    },\n  })\n  orders: Order[];\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createProduct\n                            \n                            \n                                    \n                                    Public\n                                getProductById\n                            \n                            \n                                    \n                                    Public\n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(getProductParamsDto: GetProductParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getProductParamsDto\n                                            \n                                                            GetProductParamsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { ProductsService } from './providers/products.service';\nimport { GetProductParamsDto } from './dtos/getProductParams.dto';\nimport { CreateProductDto } from './dtos/createProduct.dto';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(\n    /**inject products service */\n    private readonly productsService: ProductsService,\n  ) {}\n  @Get()\n  public getProducts() {\n    return this.productsService.findAll();\n  }\n\n  @Get(':id')\n  public getProductById(@Param() getProductParamsDto: GetProductParamsDto) {\n    return this.productsService.getProductById(getProductParamsDto);\n  }\n\n  @Post()\n  public createProduct(@Body() createProductDto: CreateProductDto) {\n    return this.productsService.createProduct(createProductDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nUsersModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Product } from './product.entity';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './providers/products.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [ProductsController],\n  providers: [ProductsService],\n  imports: [TypeOrmModule.forFeature([Product]), UsersModule],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                    Public\n                                deleteProduct\n                            \n                            \n                                findAll\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/products.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; error: boolean; id?: undefined; productName?: undefined; description?: undefined; color?: undefined; size?: undefined; heavyWeight?: undefined; price?: undefined; discount?: undefined; } | { ...; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(getProductParamsDto: GetProductParamsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getProductParamsDto\n                                            \n                                                            GetProductParamsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/products.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\nimport { CreateProductDto } from '../dtos/createProduct.dto';\nimport { GetProductParamsDto } from '../dtos/getProductParams.dto';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    /**inject user service */\n    private readonly usersService: UsersService,\n  ) {}\n  findAll() {\n    //find a user and check if it exist in db\n    //TODO later change the user to the current user on the requuest\n    const user = this.usersService.findUserById(1);\n\n    if (!user) {\n      return {\n        message: 'user not found',\n        error: true,\n      };\n    }\n\n    return {\n      id: 1,\n      productName: 'product 1',\n      description: 'product 1 description',\n      color: 'red',\n      size: 'small',\n      heavyWeight: false,\n      price: 10,\n      discount: 0,\n    };\n    // return the posts of that user\n  }\n  createProduct(@Body() createProductDto: CreateProductDto) {\n    //1 find user from database based on the autor id\n    //2 find tags from database based on the tag ids\n    //3 create post and return it\n  }\n  public updateProduct() {\n    //1 find the tags from database based on the tag ids , check if the number of found tags == number of tags was asked about\n    //2 find the post from database based on the post id\n    //3 update the properties\n    //4 return the post\n  }\n\n  public deleteProduct() {\n    //1 find the post from database based on the post id\n    //2 delete the post\n  }\n\n  public getProductById(getProductParamsDto: GetProductParamsDto) {\n    //1 find the post from database based on the post id\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('settings')\n@ApiTags('Settings')\nexport class SettingsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nGeneralSettingsModule\n\nGeneralSettingsModule\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nGeneralSettingsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                        \n                            GeneralSettingsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneralSettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SettingsController } from './settings.controller';\nimport { GeneralSettingsModule } from './general_settings.module';\nimport { GeneralSettingsController } from './general-settings.controller';\nimport { ProvidersService } from './general-settings/providers.service';\n\n@Module({\n  controllers: [SettingsController, GeneralSettingsController],\n  providers: [ProvidersService],\n  imports: [GeneralSettingsModule],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                createDate\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deliveries\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                googleId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                updateDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, address => address.user, {cascade: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Delivery[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, delivery => delivery.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Address } from 'src/settings/addresses/address.entity';\nimport { Delivery } from 'src/settings/deliveries/delivery.entity';\n\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  firstName: string;\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n  })\n  lastName: string;\n  @Column({\n    type: 'varchar',\n    length: 128,\n    nullable: false,\n    unique: true,\n  })\n  email: string;\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: false,\n    unique: true,\n  })\n  googleId: string;\n\n  @OneToOne(() => Address, (address) => address.user, {\n    cascade: true,\n    eager: true,\n  })\n  address?: Address;\n\n  @OneToMany(() => Delivery, (delivery) => delivery.user)\n  deliveries: Delivery[];\n\n  @CreateDateColumn()\n  createDate: Date;\n\n  @UpdateDateColumn()\n  updateDate: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    Public\n                                deleteUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                getUserById\n                            \n                            \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'create user'})@ApiBody({type: CreateUserDto})@ApiResponse({status: 201, description: 'user created'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUsers(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'get user by id'})@ApiProperty({description: 'id of the user', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiProperty,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateUserDto } from './dtos/createUser.dto';\nimport { PatchUserDto } from './dtos/patchUser.dto';\nimport { UsersService } from './providers/users.service';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(\n    /*\n    inject users service */\n    private readonly usersService: UsersService,\n  ) {}\n  @Get('/:id')\n  @ApiOperation({ summary: 'get user by id' })\n  @ApiProperty({ description: 'id of the user', example: 1 })\n  public getUserById(@Param('id', ParseIntPipe) id: number) {\n    return this.usersService.findUserById(id);\n  }\n  @Post()\n  @ApiOperation({ summary: 'create user' })\n  @ApiBody({ type: CreateUserDto })\n  @ApiResponse({ status: 201, description: 'user created' })\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.createUser(createUserDto);\n  }\n\n  @Patch('/:id')\n  public patchUsers(\n    @Body() patchUserDto: PatchUserDto,\n    @Param('id', ParseIntPipe) id: number,\n  ) {\n    return this.usersService.udpateUser(patchUserDto, id);\n  }\n\n  @Delete('/:id')\n  public deleteUsers(@Param('id', ParseIntPipe) id: number) {\n    return this.usersService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersService } from './providers/users.service';\nimport { User } from './user.entity';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule), TypeOrmModule.forFeature([User])],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findUserById\n                            \n                            \n                                    Public\n                                    Async\n                                udpateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        udpateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    udpateUser(patchUserDto: PatchUserDto, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthService } from 'src/auth/providers/auth/auth.service';\nimport { defaultAddress } from 'src/settings/addresses/constants/defaultAddress';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../dtos/createUser.dto';\nimport { PatchUserDto } from '../dtos/patchUser.dto';\nimport { User } from '../user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    /**inject auth service */\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n    /**inject user repository */\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  public async findUserById(id: number) {\n    return await this.userRepository.findOne({\n      where: { id },\n      relations: { deliveries: true },\n    });\n  }\n\n  public async createUser(@Body() createUserDto: CreateUserDto) {\n    console.log('from the service', createUserDto);\n    console.log(createUserDto.address);\n    //check if user exists\n    const userExists = await this.userRepository.findOneBy({\n      email: createUserDto.email,\n    });\n\n    if (userExists) {\n      return {\n        message: 'user already exists',\n        error: true,\n      };\n    }\n    // create user\n    if (!createUserDto.address) {\n      createUserDto.address = defaultAddress;\n    }\n\n    const user = this.userRepository.create(createUserDto);\n\n    // if not created throw an error\n    return await this.userRepository.save(user);\n  }\n\n  public async delete(id: number) {\n    console.log(id);\n    //delete the post , no need to delete seperatly the settings first because cascade\n    await this.userRepository.delete(id);\n    return { deleted: true, id };\n  }\n\n  public async udpateUser(@Body() patchUserDto: PatchUserDto, id: number) {\n    console.log(patchUserDto);\n    const updates = {\n      firstName: patchUserDto.firstName,\n      lastName: patchUserDto.lastName,\n    };\n    const updated = await this.userRepository.update(id, updates);\n    return updated;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/providers/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dtos/createPost.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/products/dtos/createProduct.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/dtos/getProductParams.dto.ts\n            \n            class\n            GetProductParamsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/providers/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/settings/addresses/address.controller.ts\n            \n            controller\n            AddressController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/settings/addresses/address.entity.ts\n            \n            entity\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/settings/addresses/constants/defaultAddress.ts\n            \n            variable\n            defaultAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/addresses/dtos/createAddress.dto.ts\n            \n            class\n            CreateAddressDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/settings/addresses/dtos/getAddressParam.dto.ts\n            \n            class\n            GetAddressParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/settings/addresses/dtos/patchAddress.dto.ts\n            \n            class\n            PatchAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/addresses/providers/address.service.ts\n            \n            injectable\n            AddressService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/settings/addresses/providers/create-address.provider.ts\n            \n            injectable\n            CreateAddressProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/settings/addresses/providers/get-address.provider.ts\n            \n            injectable\n            GetAddressProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/settings/addresses/providers/patch-address.provider.ts\n            \n            injectable\n            PatchAddressProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/settings/deliveries/deliveries.controller.ts\n            \n            controller\n            DeliveriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/settings/deliveries/delivery.entity.ts\n            \n            entity\n            Delivery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/deliveries/dtos/createDeliveries.dto.ts\n            \n            class\n            CreateDeliveryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/settings/deliveries/dtos/patchDeliveries.dto.ts\n            \n            class\n            PatchDeliveryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/deliveries/providers/delivery.service.ts\n            \n            injectable\n            DeliveryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/settings/general-settings/general-settings.controller.ts\n            \n            controller\n            GeneralSettingsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/general-settings/general-settings.entity.ts\n            \n            entity\n            GeneralSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/general-settings/providers/general_settings.service.ts\n            \n            injectable\n            GeneralSettingsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/settings/settings.controller.ts\n            \n            controller\n            SettingsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dtos/patchUser.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^11.0.3\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/passport-facebook : ^3.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-facebook : ^3.0.0\n        \n            passport-facebook-token : ^4.0.0\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderStatus   (src/.../orderStatus.enum.ts)\n                        \n                        \n                            ProductSize   (src/.../productSize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/orders/enums/orderStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n                        \n                            \n                                 CONFIRMED\n                            \n                        \n                        \n                            \n                                Value : CONFIRMED\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : SHIPPED\n                            \n                        \n            \n        \n\n    src/products/enums/productSize.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductSize\n                    \n                \n                        \n                            \n                                 SMALL\n                            \n                        \n                        \n                            \n                                Value : small\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LARGE\n                            \n                        \n                        \n                            \n                                Value : large\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneralSettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_imports\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DeliveriesModule\n\n\n\ncluster_DeliveriesModule_providers\n\n\n\ncluster_GeneralSettingsModule\n\n\n\ncluster_GeneralSettingsModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAddressModule\n\nAddressModule\n\nAddressModule -->\n\nUsersModule->AddressModule\n\n\n\n\n\nDeliveriesModule\n\nDeliveriesModule\n\nDeliveriesModule -->\n\nUsersModule->DeliveriesModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nUsersModule->ProductsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nCreateAddressProvider\n\nCreateAddressProvider\n\nAddressModule -->\n\nCreateAddressProvider->AddressModule\n\n\n\n\n\nGetAddressProvider\n\nGetAddressProvider\n\nAddressModule -->\n\nGetAddressProvider->AddressModule\n\n\n\n\n\nPatchAddressProvider\n\nPatchAddressProvider\n\nAddressModule -->\n\nPatchAddressProvider->AddressModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nAppModule -->\n\nDeliveriesModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveriesModule -->\n\nDeliveryService->DeliveriesModule\n\n\n\n\n\nGeneralSettingsService\n\nGeneralSettingsService\n\n\n\nGeneralSettingsModule\n\nGeneralSettingsModule\n\nGeneralSettingsModule -->\n\nGeneralSettingsService->GeneralSettingsModule\n\n\n\nSettingsModule -->\n\nGeneralSettingsModule->SettingsModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAddress   (src/.../defaultAddress.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/settings/addresses/constants/defaultAddress.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  municipality: 'Alger',\n  postalCode: '16000',\n  wilaya: 'Algier Center',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
